[
    {
        "id": "67991373.45438c",
        "type": "tab",
        "label": "Dynamic Rules From Parameters Files",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2e37e573b3c922d6",
        "type": "tab",
        "label": "Notifications",
        "disabled": false,
        "info": "# Will Send notifications.\n\nEnd point is a post in localhost:80/notification\n\nIts payload is comprised of:\n\nmsg.payload = {\n    data: [],\n    message: \"Submitting a job\",\n    sentFrom: \"QFlow\",\n    sentTo: \"Qbes\"\n}\n\nexports.params = {\n    forceTls: false,\n    params: {\n        DEBUG:    {\n            type: 'bool',\n            source: ['body', 'headers', 'query'],\n            required: false,\n            default: (v) => {\n                if (typeof v !== 'undefined' && v != '') return JSON.parse(v);\n                return false;\n            }\n        },\n        api_token: {\n            type: 'string',\n            source: ['body', 'headers', 'query'],\n            required: false\n        },\n        id:{\n            type: 'int',\n            required: false,\n            source: ['body', 'headers', 'query'],\n        },\n        data: {\n            type: 'json',\n            source: ['body'],\n            required: true,\n            default: []\n        },\n        message: {\n            type:'string',\n            source: ['body'],\n            required: true,\n            default: ''\n        },\n        sentFrom: {\n            type:'string',\n            source: ['body', 'params', 'query'],\n            required: true,\n            default: 'Qbes'\n        },\n\n        sentTo: {\n            type:'string',\n            source: ['body', 'params', 'query'],\n            required: true,\n            default: 'QFlow'\n        },\n        parent_id:{ \n            type: 'int',\n            source: ['params', 'query', 'body', 'headers'],\n            required: false,\n            default: 0\n        }\n\n    },\n    authContext: {\n        super: false,\n        server: false\n    }\n}",
        "env": []
    },
    {
        "id": "d103860e993c1512",
        "type": "tab",
        "label": "Validate RID",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d886a3864a88d832",
        "type": "tab",
        "label": "Processing Parameters",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ae7e9f579855357c",
        "type": "tab",
        "label": "Spad",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "908af5a748b37aba",
        "type": "tab",
        "label": "Rules",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e2750f4248389a2f",
        "type": "tab",
        "label": "Understanding AIES",
        "disabled": false,
        "info": "Reporting Unit\nEntity\nSurvey Details\nSurvey Details flags\nResponse Variables\n",
        "env": []
    },
    {
        "id": "c702b495.9cc2f8",
        "type": "tab",
        "label": "validate",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7d4690e10f209584",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4821a41b2fd327fb",
        "type": "tab",
        "label": "Form 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "813a171cf0470b24",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c5ce2d38887016b2",
        "type": "subflow",
        "name": "Apply rules by level type",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 20,
                "y": 220,
                "wires": [
                    {
                        "id": "a288d737bb052e78"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1580,
                "y": 220,
                "wires": [
                    {
                        "id": "e2519c448954167b",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1580,
                "y": 320,
                "wires": [
                    {
                        "id": "1ef95ce134a911b9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0111e67f54e25c8c",
        "type": "subflow",
        "name": "1.1 Classification",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 160,
                "wires": [
                    {
                        "id": "bcea1437bb5bb1a3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 500,
                "y": 140,
                "wires": [
                    {
                        "id": "bcea1437bb5bb1a3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "831dceaabaf975f9",
        "type": "subflow",
        "name": "2.1 Geogrpahy",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "f710ad2a1b56dbec"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 160,
                "wires": [
                    {
                        "id": "f710ad2a1b56dbec",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "10e53f47b43ab89e",
        "type": "subflow",
        "name": "4.0 Subflow Completeness Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "0fc84963f887090f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 500,
                "y": 80,
                "wires": [
                    {
                        "id": "0fc84963f887090f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b99b7893add8c369",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "bcba475dfd370f23"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 60,
                "wires": [
                    {
                        "id": "bcba475dfd370f23",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "27fccef587c0b218",
        "type": "subflow",
        "name": "Subflow 2",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "89b27031e68b3415"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 60,
                "wires": [
                    {
                        "id": "89b27031e68b3415",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "3fa869ffe40596e5",
        "type": "subflow",
        "name": "Subflow 3",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "6ed3a94bca74bb19"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 160,
                "y": 30,
                "wires": [
                    {
                        "id": "6ed3a94bca74bb19",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "98b684914b5fce08",
        "type": "subflow",
        "name": "Subflow 4",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "ac1127915ee1fd4b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 160,
                "y": 30,
                "wires": [
                    {
                        "id": "ac1127915ee1fd4b",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "2e55e3e8510e62d0",
        "type": "subflow",
        "name": "Subflow 5",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "f40a55ca93f943db"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 40,
                "wires": [
                    {
                        "id": "f40a55ca93f943db",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "2ad5fa373c21d0a3",
        "type": "subflow",
        "name": "Subflow 6",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "42dbbd9f093bf42e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 160,
                "y": 30,
                "wires": [
                    {
                        "id": "42dbbd9f093bf42e",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "67a3cd3b754e4fbd",
        "type": "subflow",
        "name": "Subflow 7",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "0f9ffc3cef064808"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 160,
                "y": 30,
                "wires": [
                    {
                        "id": "0f9ffc3cef064808",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "045ba1012eb08b50",
        "type": "subflow",
        "name": "Subflow 8",
        "info": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "57bc9e5538773197"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "57bc9e5538773197",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "82cc831b154f3133",
        "type": "subflow",
        "name": "SUB FLOW Dynamic Rules from Parameter Files",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "6681b08b.4a688"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1320,
                "y": 240,
                "wires": [
                    {
                        "id": "fff3d06b988e5233",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "8d5b6ce343b26ccf",
        "type": "subflow",
        "name": "Logger Of all Events",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 240,
                "wires": [
                    {
                        "id": "fea303947b28f5ab"
                    },
                    {
                        "id": "5208228e9775e479"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "7dc18555ca029842",
        "type": "group",
        "z": "d103860e993c1512",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f3903be4e24d8dca",
            "97d2bd49cb3742bc",
            "999bbdaf976e7feb",
            "d529da54696a9982",
            "d1e0f39ddacfeb20",
            "d015bbe8f3761f7f"
        ],
        "x": 54,
        "y": -1,
        "w": 838,
        "h": 208
    },
    {
        "id": "5a28e866a67c90ec",
        "type": "group",
        "z": "d103860e993c1512",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a52599d1e82370ad",
            "3773a11cc06cd9db",
            "f47d58da6a345fa9",
            "12d8ce370fc2153f",
            "6970f9e5cadfae30",
            "eee34fb243fcc025",
            "8764792a5250d529"
        ],
        "x": 14,
        "y": 279,
        "w": 1152,
        "h": 262
    },
    {
        "id": "c0b83f35fdc02130",
        "type": "group",
        "z": "67991373.45438c",
        "name": "FACS FROM DB -Select Reporting IDs from DropDown",
        "style": {
            "label": true
        },
        "nodes": [
            "0cd9973f643e23da",
            "3b55370ad9fd31f5",
            "e76e13639b1f0475",
            "7ce52ec9ef003b44",
            "d394b61bcc4755e6"
        ],
        "x": 14,
        "y": 939,
        "w": 1532,
        "h": 82
    },
    {
        "id": "ef50b77b253a7883",
        "type": "group",
        "z": "67991373.45438c",
        "name": "Rules Types",
        "style": {
            "label": true
        },
        "nodes": [
            "fb483894819a453e",
            "5f12a638967ad520",
            "199e84df3d73b845",
            "79f4bff451119fb7",
            "645a9d4772fcd00f",
            "739c4193fa8fce2c",
            "d587f5de3f4014c8"
        ],
        "x": 14,
        "y": 239,
        "w": 1792,
        "h": 182
    },
    {
        "id": "62708d0bbe922798",
        "type": "group",
        "z": "67991373.45438c",
        "name": "FACTS: From File",
        "style": {
            "label": true
        },
        "nodes": [
            "97cb22c43553888b",
            "04f3b0fb456d2117",
            "100234cf93c195b8",
            "c047c871d9c0e70d",
            "c9c9ca415ab95910",
            "16550455147cd747",
            "211d46862546b6bf",
            "571a7beaed3ab093",
            "24856db77f81d8bb",
            "21a2308db46311bb",
            "58df41cd8e54a653"
        ],
        "x": 14,
        "y": 519,
        "w": 1432,
        "h": 322
    },
    {
        "id": "19463268a6c67561",
        "type": "group",
        "z": "67991373.45438c",
        "name": "Rules: From Parameter Files",
        "style": {
            "label": true
        },
        "nodes": [
            "9a7a7971.dbc4b8",
            "1e5beed02674863a",
            "b5c53653a76681bf",
            "06db3e224b379422"
        ],
        "x": 14,
        "y": 99,
        "w": 1432,
        "h": 82,
        "info": "# Rules from Parameter Files"
    },
    {
        "id": "d1e0f39ddacfeb20",
        "type": "group",
        "z": "d103860e993c1512",
        "g": "7dc18555ca029842",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e5ca7c9975e3a6b5"
        ],
        "x": 474,
        "y": 99,
        "w": 392,
        "h": 82
    },
    {
        "id": "748ca46ea16faad4",
        "type": "junction",
        "z": "67991373.45438c",
        "x": 2161.7333374023438,
        "y": 1642.7333374023438,
        "wires": [
            []
        ]
    },
    {
        "id": "ea3e0b5d6b96f47a",
        "type": "digitaloak-postgresql-connection-manager",
        "name": "PGAIES",
        "host": "aies-cloud-aurora-pg-dev-instance-1.cjflqg3bd6i9.us-gov-east-1.rds.amazonaws.com",
        "port": "5432",
        "database": "census_internal",
        "tls": "",
        "use_tls": false,
        "pool_max_clients": "10",
        "pool_client_max_idle": "10000",
        "client_query_timeout": "",
        "client_statement_timeout": "",
        "client_connection_timeout_millis": "",
        "is_client_enabled": "1"
    },
    {
        "id": "1f48566b.e8958a",
        "type": "ui_group",
        "d": true,
        "name": "2. Processed PreRules",
        "tab": "da612906.998368",
        "order": 9,
        "disp": true,
        "width": 24,
        "collapse": true,
        "className": ""
    },
    {
        "id": "fe5119d6c50995ed",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#6e6e6e",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#e3ffe8",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#6e6e6e",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#6e6e6e",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#949494",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#6e6e6e",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "QFlow",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "true",
            "allowTempTheme": "none",
            "dateFormat": "MM/DD/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "18e6e44c.b0561c",
        "type": "ui_group",
        "name": "Tables",
        "tab": "",
        "order": 8,
        "disp": true,
        "width": "6"
    },
    {
        "id": "24e6f02ee5d4fe37",
        "type": "ui_group",
        "name": "Workflows",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "aaf91b7e.c5ca7",
        "type": "ui_group",
        "name": "template",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d7c16b88.658fa8",
        "type": "ui_group",
        "name": "iframe",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "99274104.d1d6",
        "type": "ui_group",
        "name": "Weather",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": "5",
        "collapse": false
    },
    {
        "id": "e7dc0c12a87bf783",
        "type": "ui_tab",
        "name": "Rules",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b42243a688b5a996",
        "type": "ui_group",
        "name": "Enter Workflows",
        "tab": "e7dc0c12a87bf783",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fe9b4de4.dcd72",
        "type": "ui_group",
        "name": "Name list",
        "tab": "e7dc0c12a87bf783",
        "order": 1,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "da612906.998368",
        "type": "ui_tab",
        "name": "Parameters",
        "icon": "home",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "440f78388bf9306a",
        "type": "ui_group",
        "name": "Rules for Workflows",
        "tab": "e7dc0c12a87bf783",
        "order": 3,
        "disp": true,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5c07c02344a2bd3d",
        "type": "ui_group",
        "d": true,
        "name": "1. Parameters File",
        "tab": "da612906.998368",
        "order": 8,
        "disp": true,
        "width": 24,
        "collapse": true,
        "className": ""
    },
    {
        "id": "1f86b2145e7e556a",
        "type": "ui_group",
        "name": "Facts",
        "tab": "da612906.998368",
        "order": 5,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "18a5a593fcd64912",
        "type": "ui_group",
        "name": "Dynamic Rules from Parameters File",
        "tab": "da612906.998368",
        "order": 11,
        "disp": true,
        "width": 24,
        "collapse": true,
        "className": ""
    },
    {
        "id": "134f09c88dd005fc",
        "type": "ui_group",
        "name": "Assert Facts",
        "tab": "da612906.998368",
        "order": 12,
        "disp": true,
        "width": "24",
        "collapse": true,
        "className": ""
    },
    {
        "id": "160e81fb.f1c86e",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "b63d1f91.68095",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "b63d1f91.68095",
        "type": "ui_tab",
        "name": "Files",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c33a1024a72aa169",
        "type": "ui_group",
        "name": "Default",
        "tab": "cc6c4310cf7b61cc",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "cc6c4310cf7b61cc",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8b3784e33ba42593",
        "type": "ui_group",
        "name": "JSON2tree",
        "tab": "422e1ae50d899723",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "422e1ae50d899723",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4060ccd3b1b979fd",
        "type": "ui_group",
        "name": "Gauges",
        "tab": "da612906.998368",
        "order": 1,
        "disp": false,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d5b306fd70950040",
        "type": "ui_group",
        "name": "Rules",
        "tab": "da612906.998368",
        "order": 3,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1d5401bf95a96f03",
        "type": "ui_group",
        "name": "JOBS",
        "tab": "da612906.998368",
        "order": 10,
        "disp": true,
        "width": "24",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d68e7be3.88f088",
        "type": "ui_group",
        "name": "Forms Example",
        "tab": "67ff17e9.83751",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "54bca71e.4287f",
        "type": "ui_group",
        "name": "Form",
        "tab": "67ff17e9.83751",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "67ff17e9.83751",
        "type": "ui_tab",
        "d": true,
        "name": "Forms Example ",
        "icon": "home",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "785c383535b14b7d",
        "type": "ui_group",
        "z": "4821a41b2fd327fb",
        "name": "Dashboard Event Log",
        "tab": "67ff17e9.83751",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "fc893c6c.aaeff",
        "type": "ui_group",
        "name": "Leaderboard",
        "tab": "c79bed56.dc9bd",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c79bed56.dc9bd",
        "type": "ui_tab",
        "name": "LeaderBoard",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "779fdd53a3120890",
        "type": "ui_group",
        "name": "Submit Job",
        "tab": "da612906.998368",
        "order": 7,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3e2848fe47a8e089",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6c5eaeae4cddb9b5",
        "type": "ui_group",
        "name": "Notifications",
        "tab": "da612906.998368",
        "order": 2,
        "disp": true,
        "width": "24",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4c1a66c045af9fe9",
        "type": "ui_group",
        "name": "Dummy 11",
        "tab": "da612906.998368",
        "order": 6,
        "disp": false,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "90b2b640d0604f0c",
        "type": "ui_group",
        "name": "Dummy  12",
        "tab": "da612906.998368",
        "order": 4,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5d2c762b30aa4565",
        "type": "ui_group",
        "name": "Group 13",
        "tab": "da612906.998368",
        "order": 13,
        "disp": true,
        "width": 6
    },
    {
        "id": "89738f37a85241c4",
        "type": "ui_group",
        "name": "Group 14",
        "tab": "da612906.998368",
        "order": 14,
        "disp": true,
        "width": 6
    },
    {
        "id": "aaa6a2bd0f4424d6",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "4060ccd3b1b979fd",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "e75390706a65e3e5",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "4060ccd3b1b979fd",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "6f96b464232a1a19",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "4060ccd3b1b979fd",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "3f649d703593b722",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "4060ccd3b1b979fd",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "413ed3c63683d1b5",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "dc2edd3556f65cec",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "69ebfd4ef913f315",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "e9629ed77a5bb716",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "b4675898aa079f61",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 7,
        "width": 7,
        "height": 1
    },
    {
        "id": "94eef4fbe1138ddd",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 8,
        "width": 24,
        "height": 1
    },
    {
        "id": "2c201b66bda87f24",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "059d1df6b0bb3235",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "12817e67ab9b66b6",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "b38cce15ed76db34",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "8d75411069066a78",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "60d1fd9c3ce1bb54",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "f5a5c719c7e7c99f",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "bbd25f2ab8e1cc28",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "f601504d24dfa90f",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "4f91014324273a18",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "1d5401bf95a96f03",
        "order": 4,
        "width": 16,
        "height": 1
    },
    {
        "id": "6f46629ba1286c64",
        "type": "ui_tab",
        "name": "Jobs",
        "icon": "fa-hand-o-right ",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "48c415689cc2322d",
        "type": "ui_group",
        "name": "Submit Jobs",
        "tab": "6f46629ba1286c64",
        "order": 1,
        "disp": true,
        "width": 23,
        "collapse": false,
        "className": ""
    },
    {
        "id": "feff05cd26e0da54",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "440f78388bf9306a",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "34fc56d907f44e90",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "440f78388bf9306a",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "f081928bfa9474f1",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "440f78388bf9306a",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "8d5c276b9010e981",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "440f78388bf9306a",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "5b0ed2ae974ff3e1",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "440f78388bf9306a",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "8333ef5178609617",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "440f78388bf9306a",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "2a87ea2fcd055deb",
        "type": "ui_spacer",
        "z": "2e37e573b3c922d6",
        "name": "spacer",
        "group": "48c415689cc2322d",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "9a0d32273f30aad5",
        "type": "comment",
        "z": "c5ce2d38887016b2",
        "name": "Apply level type rules",
        "info": "",
        "x": 200,
        "y": 80,
        "wires": []
    },
    {
        "id": "7fabfc204b7200d7",
        "type": "switch",
        "z": "c5ce2d38887016b2",
        "name": "Sort By Level Type",
        "property": "payload.facts.level_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "c",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "d",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "e",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 570,
        "y": 320,
        "wires": [
            [
                "2ea82a98af688f5a"
            ],
            [
                "f533c299c2a137bd"
            ],
            [
                "8a476e37206a1b82"
            ],
            [
                "8a476e37206a1b82"
            ]
        ]
    },
    {
        "id": "2ea82a98af688f5a",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Execute Company level rules",
        "func": "msg.query = `select id, name, description, active, type, rvs,    parsed_rule->>'event' as event ,parsed_rule->>'conditions' as conditions,  (parsed_rule)::TEXT parsed_rule, data   from aies.rules_repository where type like '%' `\nmsg.topic = 'facts'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 280,
        "wires": [
            [
                "769cdae6ee0fb68f"
            ]
        ]
    },
    {
        "id": "f533c299c2a137bd",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Execute KAU/ESTAB RULES",
        "func": "msg.query = `select id, name, description, active, type, rvs,    parsed_rule->>'event' as event ,parsed_rule->>'conditions' as conditions,  (parsed_rule)::TEXT parsed_rule, data   from aies.rules_repository where type = 'KAU/ESTAB' `\nmsg.topic = 'facts'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 320,
        "wires": [
            [
                "769cdae6ee0fb68f"
            ]
        ]
    },
    {
        "id": "8a476e37206a1b82",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Execute Estab Level Rules",
        "func": "msg.query = `select id, name, description, active, type, rvs,    parsed_rule->>'event' as event ,parsed_rule->>'conditions' as conditions,  (parsed_rule)::TEXT parsed_rule, data   from aies.rules_repository where type = 'estab' `\nmsg.topic='facts'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 360,
        "wires": [
            [
                "769cdae6ee0fb68f"
            ]
        ]
    },
    {
        "id": "769cdae6ee0fb68f",
        "type": "digitaloak-postgresql-query",
        "z": "c5ce2d38887016b2",
        "name": "PG-AIES: Get rules",
        "server": "ea3e0b5d6b96f47a",
        "inputs": 1,
        "outputs": 1,
        "x": 1130,
        "y": 320,
        "wires": [
            [
                "1ef95ce134a911b9"
            ]
        ]
    },
    {
        "id": "1ef95ce134a911b9",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Get rules",
        "func": "msg.payload = msg.payload.rows\nmsg.topic = 'rules'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 320,
        "wires": [
            [
                "715ae02.ffcb82"
            ]
        ]
    },
    {
        "id": "e2519c448954167b",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Qbes: Call Rule Editor",
        "func": "msg.factsArray = [msg.facts]\nmsg.payload = {factsArray: [msg.facts], facts: msg.facts, rules: msg.rules}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 220,
        "wires": [
            [
                "8c5e71d5a2a04ba2"
            ]
        ]
    },
    {
        "id": "715ae02.ffcb82",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Merge Facts and Rules",
        "func": "context.data = context.data || new Object();\n\nswitch (msg.topic) {\n    case \"facts\":\n        context.data.facts = msg.payload.data[0].facts;\n        msg = null;\n        break;\n    case \"rules\":\n        context.data.rules = msg.payload;\n        msg = null;\n        break;\n    case \"task3\":\n        context.data.task3 = msg.payload;\n        msg = null;\n        break;\n        \n    default:\n        msg = null;\n    \tbreak;\n\n}\n\nif(context.data.rules != null && context.data.facts != null && context.data.task3 == null) {\n\tlet msg2 = new Object();\n    msg2 = context.data;\n    context.data=null;\n\treturn msg2;\n} else return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 220,
        "wires": [
            [
                "e2519c448954167b"
            ]
        ]
    },
    {
        "id": "a288d737bb052e78",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Input Facts",
        "func": "// msg.payload.facts = msg.payload.data[0].facts\nmsg.topic = 'facts'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 220,
        "wires": [
            [
                "b98b1004c0382a3d"
            ]
        ]
    },
    {
        "id": "b98b1004c0382a3d",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Split to get facts and rules",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 220,
        "wires": [
            [
                "715ae02.ffcb82",
                "7fabfc204b7200d7"
            ]
        ]
    },
    {
        "id": "8c5e71d5a2a04ba2",
        "type": "debug",
        "z": "c5ce2d38887016b2",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 120,
        "wires": []
    },
    {
        "id": "bcea1437bb5bb1a3",
        "type": "function",
        "z": "0111e67f54e25c8c",
        "name": "1.1.1 Classification",
        "func": "msg.actions.classificationCompleted = true\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 140,
        "wires": [
            [
                "2e40abf0ac9d09f7"
            ]
        ]
    },
    {
        "id": "2e40abf0ac9d09f7",
        "type": "debug",
        "z": "0111e67f54e25c8c",
        "name": "Classified Facts",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "facts",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 40,
        "wires": []
    },
    {
        "id": "f710ad2a1b56dbec",
        "type": "function",
        "z": "831dceaabaf975f9",
        "name": "Validate GEO",
        "func": "\nif(msg.facts.GEO) msg.facts.GEOLELVEL = 'valid'\nelse msg.facts.GEOLELVEL = 'invalid'\nmsg.actions.geogrpahyCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "0fc84963f887090f",
        "type": "function",
        "z": "10e53f47b43ab89e",
        "name": "4.0 Completeness Check",
        "func": "\nmsg.actions.completenessCheckCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "bcba475dfd370f23",
        "type": "function",
        "z": "b99b7893add8c369",
        "name": "5.0 Logical Check",
        "func": "msg.action = 'Logical Check'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "89b27031e68b3415",
        "type": "function",
        "z": "27fccef587c0b218",
        "name": "6.0 Ratio/Range Testing",
        "func": "msg.actions.ratioRangeTestingCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6ed3a94bca74bb19",
        "type": "function",
        "z": "3fa869ffe40596e5",
        "name": "7.0 Post Ratio/Range",
        "func": "msg.actions.postRatioRangeCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ac1127915ee1fd4b",
        "type": "function",
        "z": "98b684914b5fce08",
        "name": "8.0 Unit Balance",
        "func": "msg.actions.unitBalanceCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "f40a55ca93f943db",
        "type": "function",
        "z": "2e55e3e8510e62d0",
        "name": "9.0 Company Additivity Check",
        "func": "msg.actions.companyAdditivityCheckCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "42dbbd9f093bf42e",
        "type": "function",
        "z": "2ad5fa373c21d0a3",
        "name": "10.0 Derived Items",
        "func": "msg.actions.derivedItemsCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "0f9ffc3cef064808",
        "type": "function",
        "z": "67a3cd3b754e4fbd",
        "name": "11.0 Post Edit Status Fields",
        "func": "msg.actions.postEditStatusFieldsCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "57bc9e5538773197",
        "type": "function",
        "z": "045ba1012eb08b50",
        "name": "3.0 All Units",
        "func": "msg.actions.allUnitsCompleted = true\nmsg.actions.determineStatusCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6681b08b.4a688",
        "type": "file in",
        "z": "82cc831b154f3133",
        "name": "Read File",
        "filename": "payload",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 200,
        "y": 140,
        "wires": [
            [
                "e843fa29.885718"
            ]
        ]
    },
    {
        "id": "e843fa29.885718",
        "type": "csv",
        "z": "82cc831b154f3133",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 350,
        "y": 140,
        "wires": [
            [
                "99680b80968eef8c",
                "a2cbb8c5837a6f57"
            ]
        ]
    },
    {
        "id": "99680b80968eef8c",
        "type": "function",
        "z": "82cc831b154f3133",
        "name": "Convert Parameter File to Pre-Processed Rules",
        "func": "let preRules = []\n\nmsg.payload.map((r, k) => {\n\n\n// Build conditionstring cs\nlet cs  = r['CONDITION'] || 'PAY_ANN > 0'\n\nlet shortCondition = r['Short Condition'] || ''\n\ncs = (shortCondition == '') ? cs : shortCondition + ' and ' + cs\n\n\n\n\n    let actionStringRHS = ''\n    let action =[] // [{ 'FAILURE': true }]\n    let actionString = (r['ACTIONSTRING']).trim()\n\n    // actionString = (actionString.endsWith(\";\")) ? actionString.slice(0, -1) + \"\" : \"\"\n    \n\n\n  \n\n    let arr = actionString.split(\";\");\n\n    for (let i = 0; i < arr.length; i++) {\n        const equation = arr[i];\n        const [key, val] = equation.split(/(?<=^[^\\=]+)\\=/) //split(\"=\");\n\n\n        let c_key = key.replace(/[^\\x20-\\x7E]/g, \"\").trim()\n        let c_value = val.replace(\" eq \", \"=\").trim()\n\n        if (key)\n            action.push({ [c_key]: c_value });\n    }\n    \n   \n// GET DETAIL TOTALS:\nlet SUM_DET = ''\nlet SUM_DET_ARRAY = []\n\n\n\n\nfor(let j = 0 ; j < 14; ++j){\n    \n    let detVar = r['DETAIL ' + j] ? r['DETAIL ' + j] : ''\n   if(detVar !=='') SUM_DET_ARRAY.push(detVar) \n}\n\n\nif(SUM_DET_ARRAY.length > 0){\n    action.push({ [\"TOTAL\"]: r['TOTAL'] }) \nSUM_DET = SUM_DET_ARRAY.join(' + ')\naction.push({\"SUM_DET\":SUM_DET })\n\n\n}\n    let sector = r['SECTOR/TRADE'] ? r['SECTOR/TRADE'] : \"All\"\n    let validationType = \"Sector \"+sector\n\n\n\n //&& r['ACTIONSTRING'] != '' ? r['ACTIONSTRING'] :  [{'FAILURE': true}]\n    preRules.push({ \n    key: k+2, \n    ruleId: k+2,\n    type: k+2,\n    priority: r['PRIORITY'] || 5,\n    conditionstring:  cs ,\n    message: r['DESCRIPTION'], \n    action,\n    actionString: JSON.stringify(action),\n    validationType,\n    sector\n    })\n\n})\n\nmsg.preRules = preRules\nmsg.params = preRules\nmsg.payload = {paramFile: preRules}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 200,
        "wires": [
            [
                "5ab2c885ede5e880",
                "fff3d06b988e5233",
                "da484b090d083d49"
            ]
        ]
    },
    {
        "id": "5ab2c885ede5e880",
        "type": "function",
        "z": "82cc831b154f3133",
        "name": "Load the pre-rules table",
        "func": "msg.payload = msg.params\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 180,
        "wires": [
            [
                "4440c71e.f88f18"
            ]
        ]
    },
    {
        "id": "fff3d06b988e5233",
        "type": "http request",
        "z": "82cc831b154f3133",
        "name": "API call to Analyse Parameters Rules File",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/rulesrepo/stringsToRules?DEBUG=true",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 1040,
        "y": 420,
        "wires": [
            [
                "8302074bca046e52",
                "a53fbc532450d88c",
                "c370fdc0adea4b18",
                "634a65c934af51b3",
                "62671df4cfe27264",
                "6c832fce46c1bafb",
                "a6cace27ff79a8fb"
            ]
        ]
    },
    {
        "id": "5cfa292979246c14",
        "type": "ui_table",
        "z": "82cc831b154f3133",
        "group": "5c07c02344a2bd3d",
        "name": "1.0 CSV Import Parameters File",
        "order": 1,
        "width": 24,
        "height": 5,
        "columns": [
            {
                "field": "key",
                "title": "Row",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "SECTOR/TRADE",
                "title": "SECTOR/TRADE",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "NAICS",
                "title": "NAICS",
                "width": "40%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Short Condition",
                "title": "Message",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "CONDITION",
                "title": "CONDITION",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "DESCRIPTION",
                "title": "DESCRIPTION",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "UNIT TYPE",
                "title": "UNIT TYPE",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "TOTAL",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 990,
        "y": 80,
        "wires": []
    },
    {
        "id": "4440c71e.f88f18",
        "type": "ui_table",
        "z": "82cc831b154f3133",
        "group": "1f48566b.e8958a",
        "name": "2. Processed Pre-Rule",
        "order": 1,
        "width": 17,
        "height": 5,
        "columns": [
            {
                "field": "key",
                "title": "Row",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "conditionstring",
                "title": "Condition",
                "width": "40%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "message",
                "title": "Message",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "actionString",
                "title": "Action",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1300,
        "y": 180,
        "wires": []
    },
    {
        "id": "7deb55a4c358e093",
        "type": "ui_table",
        "z": "82cc831b154f3133",
        "group": "18a5a593fcd64912",
        "name": "3. Processed Rules",
        "order": 1,
        "width": 24,
        "height": 5,
        "columns": [
            {
                "field": "rule.event.ruleId",
                "title": "Row",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "conditionstring",
                "title": "Condition",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "actiontring",
                "title": "Action",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "output.success",
                "title": "Success",
                "width": "",
                "align": "left",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "output.message",
                "title": "Error Message",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "output.value",
                "title": "Condition Value",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "JSON.stringify(output)",
                "title": "Output",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1710,
        "y": 500,
        "wires": []
    },
    {
        "id": "8302074bca046e52",
        "type": "change",
        "z": "82cc831b154f3133",
        "name": "Results from rules compilation",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.results",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 500,
        "wires": [
            [
                "7deb55a4c358e093"
            ]
        ]
    },
    {
        "id": "a53fbc532450d88c",
        "type": "change",
        "z": "82cc831b154f3133",
        "name": "Errors in condition from compilation",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.conditionError",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 560,
        "wires": [
            [
                "10cad444a2f23d2e"
            ]
        ]
    },
    {
        "id": "10cad444a2f23d2e",
        "type": "ui_table",
        "z": "82cc831b154f3133",
        "group": "18a5a593fcd64912",
        "name": "3.1. Condition Errors",
        "order": 3,
        "width": 24,
        "height": 3,
        "columns": [
            {
                "field": "ruleId",
                "title": "Row",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "message",
                "title": "Error Message",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "expression",
                "title": "Condition",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1720,
        "y": 560,
        "wires": []
    },
    {
        "id": "c370fdc0adea4b18",
        "type": "change",
        "z": "82cc831b154f3133",
        "name": "Facts Needed from compilation",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.factsNeededNameValue",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 620,
        "wires": [
            [
                "2451d69dcbe26c12"
            ]
        ]
    },
    {
        "id": "2451d69dcbe26c12",
        "type": "ui_table",
        "z": "82cc831b154f3133",
        "group": "18a5a593fcd64912",
        "name": "3.2. Facts Needed",
        "order": 4,
        "width": 24,
        "height": 2,
        "columns": [
            {
                "field": "name",
                "title": "Row",
                "width": "80",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "value",
                "title": "Value",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1710,
        "y": 620,
        "wires": []
    },
    {
        "id": "a2cbb8c5837a6f57",
        "type": "function",
        "z": "82cc831b154f3133",
        "name": "Add Key to the csv rows",
        "func": "\n\nmsg.payload = msg.payload.map((p, k) => { return { ...p, ...{ key: k+2 } } })\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 80,
        "wires": [
            [
                "5cfa292979246c14"
            ]
        ]
    },
    {
        "id": "634a65c934af51b3",
        "type": "ui_gauge",
        "z": "82cc831b154f3133",
        "name": "Gauge for Errors",
        "group": "4060ccd3b1b979fd",
        "order": 2,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Errors",
        "label": "units",
        "format": "{{msg.payload.outputErrorCount}}",
        "min": 0,
        "max": "10",
        "colors": [
            "#a4110e",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1440,
        "y": 280,
        "wires": []
    },
    {
        "id": "62671df4cfe27264",
        "type": "ui_gauge",
        "z": "82cc831b154f3133",
        "name": "Gauge for Rules",
        "group": "4060ccd3b1b979fd",
        "order": 1,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Rules",
        "label": "rules",
        "format": "{{msg.payload.results.length}}",
        "min": 0,
        "max": "500",
        "colors": [
            "#3cb226",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1440,
        "y": 340,
        "wires": []
    },
    {
        "id": "6c832fce46c1bafb",
        "type": "ui_gauge",
        "z": "82cc831b154f3133",
        "name": "Gauge for Params",
        "group": "4060ccd3b1b979fd",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Params",
        "label": "units",
        "format": "{{msg.payload.factsNeededNameValue.length}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1430,
        "y": 400,
        "wires": []
    },
    {
        "id": "aea84a7e33de6f9b",
        "type": "function",
        "z": "82cc831b154f3133",
        "name": "Utility Functions",
        "func": "\n    // function to convert string of equations to JSON array\n    function stringToJSON (str){\n    \n\n        // function cleanupString(str) { return str.replace(/[^\\x20-\\x7E]/g, \"\").trim(); }\n    \n    let arr = str.split(\";\");\n    let json = [];\n    for (let i = 0; i < arr.length; i++) {\n        const equation = arr[i];\n        const [key, val] = equation.split(/(?<=^[^\\=]+)\\=/) //split(\"=\");\n\n        if (key)\n            json.push({ [cleanupString(key)]: cleanupString(val.replace(\" eq \", \"=\")) });\n    }\n    return json;\n}\n\nfunction cleanupString(str){ return str.replace(/[^\\x20-\\x7E]/g, \"\").trim(); }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "c7bbcb8e289cfe40",
        "type": "catch",
        "z": "82cc831b154f3133",
        "name": "Catch read file errors",
        "scope": null,
        "uncaught": false,
        "x": 220,
        "y": 520,
        "wires": [
            [
                "e5ae3f0c5950f841"
            ]
        ]
    },
    {
        "id": "260189c8c6ed366b",
        "type": "ui_toast",
        "z": "82cc831b154f3133",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 690,
        "y": 520,
        "wires": []
    },
    {
        "id": "e5ae3f0c5950f841",
        "type": "function",
        "z": "82cc831b154f3133",
        "name": "function 9",
        "func": "msg.payload = msg.error.message\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 600,
        "wires": [
            [
                "260189c8c6ed366b",
                "ba709063e175e036"
            ]
        ]
    },
    {
        "id": "ba709063e175e036",
        "type": "debug",
        "z": "82cc831b154f3133",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 620,
        "wires": []
    },
    {
        "id": "da484b090d083d49",
        "type": "debug",
        "z": "82cc831b154f3133",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 280,
        "wires": []
    },
    {
        "id": "a6cace27ff79a8fb",
        "type": "debug",
        "z": "82cc831b154f3133",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 320,
        "wires": []
    },
    {
        "id": "17cb8d5c1c2dfc81",
        "type": "ui_template",
        "z": "8d5b6ce343b26ccf",
        "d": true,
        "group": "1d5401bf95a96f03",
        "name": "JOB Event Log ",
        "order": 2,
        "width": 24,
        "height": 5,
        "format": "<ul>\n    <li ng-repeat=\"x in msg.payload\">\n  \n        <font color=\"green\">{{x.topic}}</font>\n        <ul>\n            <li>{{x.payload}}</li>\n        </ul>\n    </li>\n</ul>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5208228e9775e479",
        "type": "function",
        "z": "8d5b6ce343b26ccf",
        "name": "Save Events",
        "func": "// NK will set the submitted flow to null\n\n// flow.set(\"submitted\", null)\n// initialise the counter to 0 if it doesn't exist already\nvar dashboardLog = context.get('dashboardLog')|| [];\n\ndashboardLog.push(msg);\nif (dashboardLog.length > 20){\n    // Delete oldest message if > 20\n    dashboardLog.shift();\n    dashboardLog.length = 20;\n} \n\n\n// store the value back\ncontext.set('dashboardLog',dashboardLog);\n\n// make it part of the outgoing msg object\nmsg = {};\nmsg.payload = [...dashboardLog];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 240,
        "wires": [
            [
                "20fe51011ee16859",
                "42849eb6f8ee9501"
            ]
        ]
    },
    {
        "id": "63eaa3d343dece84",
        "type": "ui_toast",
        "z": "8d5b6ce343b26ccf",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "QBES Output",
        "name": "",
        "x": 630,
        "y": 380,
        "wires": []
    },
    {
        "id": "fea303947b28f5ab",
        "type": "function",
        "z": "8d5b6ce343b26ccf",
        "name": "function 5",
        "func": "msg.payload = \"Job Completed at:\"+ new Date().toLocaleString()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 380,
        "wires": [
            [
                "63eaa3d343dece84"
            ]
        ]
    },
    {
        "id": "3bd3c0ad26af3e70",
        "type": "ui_button",
        "z": "8d5b6ce343b26ccf",
        "name": "",
        "group": "1d5401bf95a96f03",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Reset Log",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-circle-o",
        "payload": "[]",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 390,
        "y": 180,
        "wires": [
            [
                "e5d60e2f52182631"
            ]
        ]
    },
    {
        "id": "e5d60e2f52182631",
        "type": "function",
        "z": "8d5b6ce343b26ccf",
        "name": "Clear context set dashboardLog to []",
        "func": "context.set('dashboardLog', []);\nmsg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 180,
        "wires": [
            [
                "17cb8d5c1c2dfc81",
                "20fe51011ee16859"
            ]
        ]
    },
    {
        "id": "20fe51011ee16859",
        "type": "ui_table",
        "z": "8d5b6ce343b26ccf",
        "group": "1d5401bf95a96f03",
        "name": "Output",
        "order": 1,
        "width": 24,
        "height": 7,
        "columns": [
            {
                "field": "rules.valid",
                "title": "#",
                "width": "",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "payload.wflid",
                "title": "WFID",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "payload.passed",
                "title": "Passed",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "payload.failed",
                "title": "Failed",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "payload.startTime",
                "title": "Start Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "payload.endTime",
                "title": "End Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 970,
        "y": 320,
        "wires": []
    },
    {
        "id": "42849eb6f8ee9501",
        "type": "debug",
        "z": "8d5b6ce343b26ccf",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 420,
        "wires": []
    },
    {
        "id": "9a7a7971.dbc4b8",
        "type": "inject",
        "z": "67991373.45438c",
        "g": "19463268a6c67561",
        "name": "Inject Filename",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/Users/revealgc/Desktop/4testMOD.csv",
        "payloadType": "str",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "1e5beed02674863a"
            ]
        ],
        "outputLabels": [
            "Send Time"
        ]
    },
    {
        "id": "1e5beed02674863a",
        "type": "ui_text_input",
        "z": "67991373.45438c",
        "g": "19463268a6c67561",
        "name": "Input Parameter File Name",
        "label": "Params file...",
        "tooltip": "Enter the location of the parameters file",
        "group": "d5b306fd70950040",
        "order": 2,
        "width": 15,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 440,
        "y": 140,
        "wires": [
            [
                "b5c53653a76681bf"
            ]
        ]
    },
    {
        "id": "97cb22c43553888b",
        "type": "comment",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Fact from files",
        "info": "# Facts CSV File ",
        "x": 910,
        "y": 800,
        "wires": []
    },
    {
        "id": "b5c53653a76681bf",
        "type": "subflow:82cc831b154f3133",
        "z": "67991373.45438c",
        "g": "19463268a6c67561",
        "name": "",
        "x": 800,
        "y": 140,
        "wires": [
            [
                "06db3e224b379422"
            ]
        ]
    },
    {
        "id": "04f3b0fb456d2117",
        "type": "ui_text_input",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Input Dataset File Name",
        "label": "Facts",
        "tooltip": "Enter the location of the parameters file",
        "group": "1f86b2145e7e556a",
        "order": 2,
        "width": 15,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 370,
        "y": 600,
        "wires": [
            [
                "100234cf93c195b8"
            ]
        ]
    },
    {
        "id": "100234cf93c195b8",
        "type": "file in",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Read File",
        "filename": "payload",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 580,
        "y": 600,
        "wires": [
            [
                "c047c871d9c0e70d"
            ]
        ]
    },
    {
        "id": "c047c871d9c0e70d",
        "type": "csv",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 730,
        "y": 600,
        "wires": [
            [
                "c9c9ca415ab95910",
                "58df41cd8e54a653"
            ]
        ]
    },
    {
        "id": "c9c9ca415ab95910",
        "type": "function",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Save Facts from file",
        "func": "let facts = {}\nmsg.payload.map((r, k) => {\n    facts = {...facts, ...{[r['name']]: r['value']}}\n})\n\nflow.set(\"facts\", facts)\n\n\nmsg.facts = msg.payload\nmsg.payload = [facts]\n\n\n\nmsg.topic = \"facts\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 600,
        "wires": [
            [
                "571a7beaed3ab093"
            ]
        ]
    },
    {
        "id": "16550455147cd747",
        "type": "ui_table",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "group": "134f09c88dd005fc",
        "name": "4. Facts",
        "order": 1,
        "width": 24,
        "height": 4,
        "columns": [
            {
                "field": "rule.event.ruleId",
                "title": "Row",
                "width": "80",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "value",
                "title": "Value",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1240,
        "y": 640,
        "wires": []
    },
    {
        "id": "211d46862546b6bf",
        "type": "inject",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "FileName Inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/Users/revealgc/Desktop/factsToTest.csv",
        "payloadType": "str",
        "x": 140,
        "y": 600,
        "wires": [
            [
                "04f3b0fb456d2117"
            ]
        ],
        "outputLabels": [
            "Send Time"
        ]
    },
    {
        "id": "571a7beaed3ab093",
        "type": "change",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Enable ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "facts",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "value",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 600,
        "wires": [
            [
                "16550455147cd747",
                "24856db77f81d8bb",
                "21a2308db46311bb"
            ]
        ]
    },
    {
        "id": "fb483894819a453e",
        "type": "http request",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "Get Rule Types from DB",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/rulesrepo/getruletype",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 410,
        "y": 340,
        "wires": [
            [
                "79f4bff451119fb7"
            ]
        ]
    },
    {
        "id": "5f12a638967ad520",
        "type": "inject",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 380,
        "wires": [
            [
                "fb483894819a453e"
            ]
        ]
    },
    {
        "id": "199e84df3d73b845",
        "type": "ui_dropdown",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "Rule Types Drop Down Topic: validationTopic",
        "label": "",
        "tooltip": "Select rule types",
        "place": "Select rule types from the db...",
        "group": "d5b306fd70950040",
        "order": 4,
        "width": 12,
        "height": 1,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "validationType",
        "topicType": "str",
        "className": "",
        "x": 1190,
        "y": 340,
        "wires": [
            [
                "739c4193fa8fce2c"
            ]
        ]
    },
    {
        "id": "79f4bff451119fb7",
        "type": "function",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "Prep for DB Rules Dropdown Topic:dbruletypes",
        "func": "let ret = []\nmsg.payload.map(t => ret.push({ [t.type + '(' + t.cnt +')']: t.type}))\nmsg.options = ret\nmsg.payload = ret\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 340,
        "wires": [
            [
                "199e84df3d73b845"
            ]
        ]
    },
    {
        "id": "645a9d4772fcd00f",
        "type": "ui_button",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "",
        "group": "d5b306fd70950040",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Get Rules",
        "tooltip": "Get rule types",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-database",
        "payload": "dbrules",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 280,
        "wires": [
            [
                "fb483894819a453e"
            ]
        ]
    },
    {
        "id": "24856db77f81d8bb",
        "type": "ui_gauge",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Gauge for Facts from file",
        "group": "4060ccd3b1b979fd",
        "order": 4,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Facts",
        "label": "units",
        "format": "{{msg.payload.length}}",
        "min": 0,
        "max": "300",
        "colors": [
            "#0d0b96",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1290,
        "y": 560,
        "wires": []
    },
    {
        "id": "0cd9973f643e23da",
        "type": "ui_text_input",
        "z": "67991373.45438c",
        "g": "c0b83f35fdc02130",
        "name": "Input RID",
        "label": "Reporting IDs",
        "tooltip": "Enter at least 3 characters",
        "group": "1f86b2145e7e556a",
        "order": 5,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 100,
        "y": 980,
        "wires": [
            [
                "3b55370ad9fd31f5"
            ]
        ]
    },
    {
        "id": "3b55370ad9fd31f5",
        "type": "http request",
        "z": "67991373.45438c",
        "g": "c0b83f35fdc02130",
        "name": "Get RIDs from DB",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/reporting_unit/findRID/{{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 330,
        "y": 980,
        "wires": [
            [
                "7ce52ec9ef003b44"
            ]
        ]
    },
    {
        "id": "e76e13639b1f0475",
        "type": "ui_dropdown",
        "z": "67991373.45438c",
        "g": "c0b83f35fdc02130",
        "name": "Rule Types Drop Down Topic: dbreportingids",
        "label": "",
        "tooltip": "Select reporting ids...",
        "place": "Select reporting ids from the db...",
        "group": "1f86b2145e7e556a",
        "order": 4,
        "width": 10,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "dbreportingids",
        "topicType": "msg",
        "className": "",
        "x": 1050,
        "y": 980,
        "wires": [
            [
                "d394b61bcc4755e6"
            ]
        ]
    },
    {
        "id": "7ce52ec9ef003b44",
        "type": "function",
        "z": "67991373.45438c",
        "g": "c0b83f35fdc02130",
        "name": "Prep for RID Dropdown Topic:dbreportingids",
        "func": "let ret = []\n msg.payload.map(t => ret.push({ [t.shortvalue + \" \"+ t.reporting_id]: t.reporting_id}))\nmsg.options = ret\nmsg.payload = ret\nmsg.topic = \"dbreportingids\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 980,
        "wires": [
            [
                "e76e13639b1f0475"
            ]
        ]
    },
    {
        "id": "d394b61bcc4755e6",
        "type": "function",
        "z": "67991373.45438c",
        "g": "c0b83f35fdc02130",
        "name": "Save Reporting IDs",
        "func": "let rid = msg.payload\nmsg.reporting_id = msg.payload\nflow.set(\"reporting_id\", rid)\nmsg.payload = rid.length > 0\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 980,
        "wires": [
            [
                "f45097235bf5254d",
                "b50c075944f35652"
            ]
        ]
    },
    {
        "id": "1e61b63c0502b4e9",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2600,
        "y": 880,
        "wires": []
    },
    {
        "id": "044139040f928c41",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2400,
        "y": 740,
        "wires": []
    },
    {
        "id": "8c1b098c01bc4977",
        "type": "ui_switch",
        "z": "67991373.45438c",
        "name": "cb_ff",
        "label": "",
        "tooltip": "",
        "group": "1f86b2145e7e556a",
        "order": 1,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "cb_ff",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2050,
        "y": 600,
        "wires": [
            [
                "fd562624ab71790e"
            ]
        ]
    },
    {
        "id": "5f1b840d2df55385",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Save checkboxes",
        "func": "let P = msg.payload\n\n// Save Checkboxes\n\nflow.set(\"cb_ff\", P.cb_ff)\n\nflow.set(\"cb_fd\", P.cb_fd)\nflow.set(\"cb_rf\", P.cb_rf)\nflow.set(\"cb_rd\", P.cb_rd)\n\nflow.set(\"cb_network\", P.cb_network)\nflow.set(\"cb_attached\", P.cb_attached)\n\n\n// rules and facts must be from either files or db\nmsg.payload = (P.cb_ff || P.cb_fd) && (P.cb_rf || P.cb_rd)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2430,
        "y": 820,
        "wires": [
            [
                "1e61b63c0502b4e9",
                "dfb61e11af38dafd"
            ]
        ]
    },
    {
        "id": "f45097235bf5254d",
        "type": "ui_switch",
        "z": "67991373.45438c",
        "name": "cb_fd",
        "label": "",
        "tooltip": "",
        "group": "1f86b2145e7e556a",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "cb_fd",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2010,
        "y": 980,
        "wires": [
            [
                "fd562624ab71790e"
            ]
        ]
    },
    {
        "id": "7068b9cdbaed7677",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Reset all",
        "func": "flow.set(\"rules\",[])\nflow.set(\"facts\", {})\nflow.set(\"reporting_id\", {})\nflow.set(\"validationType\", {})\n\n\nflow.set(\"cb_attached\", false)\n\nflow.set(\"cb_network\", false)\n\n\n flow.set('cb_ff', false)\nflow.set('cb_fd', false)\n\nflow.set('cb_rf', false)\nflow.set('cb_rd', false)\nmsg.payload = false\n\nmsg.enabled = false",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2400,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "fd562624ab71790e",
        "type": "join",
        "z": "67991373.45438c",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 2250,
        "y": 820,
        "wires": [
            [
                "5f1b840d2df55385",
                "044139040f928c41"
            ]
        ]
    },
    {
        "id": "ef78548912a4d7aa",
        "type": "ui_switch",
        "z": "67991373.45438c",
        "name": "cb_rf",
        "label": "",
        "tooltip": "",
        "group": "d5b306fd70950040",
        "order": 1,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "cb_rf",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2050,
        "y": 140,
        "wires": [
            [
                "fd562624ab71790e"
            ]
        ]
    },
    {
        "id": "9a41aca46f8e70f2",
        "type": "ui_switch",
        "z": "67991373.45438c",
        "name": "cb_rd",
        "label": "",
        "tooltip": "",
        "group": "d5b306fd70950040",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "cb_rd",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2050,
        "y": 340,
        "wires": [
            [
                "fd562624ab71790e"
            ]
        ]
    },
    {
        "id": "7f5231b4f331e49b",
        "type": "ui_switch",
        "z": "67991373.45438c",
        "name": "",
        "label": "Network",
        "tooltip": "",
        "group": "779fdd53a3120890",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "cb_network",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2060,
        "y": 1200,
        "wires": [
            [
                "fd562624ab71790e"
            ]
        ]
    },
    {
        "id": "ba7a7633a548b05b",
        "type": "ui_switch",
        "z": "67991373.45438c",
        "name": "",
        "label": "Attached",
        "tooltip": "",
        "group": "779fdd53a3120890",
        "order": 1,
        "width": 8,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "cb_attached",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2040,
        "y": 1080,
        "wires": [
            [
                "fd562624ab71790e"
            ]
        ]
    },
    {
        "id": "48fe92c3d9b4d8bb",
        "type": "ui_button",
        "z": "67991373.45438c",
        "name": "",
        "group": "779fdd53a3120890",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Submit JOB",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-tasks",
        "payload": "DONE",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 3010,
        "y": 820,
        "wires": [
            [
                "73055769ca44b5f7"
            ]
        ]
    },
    {
        "id": "dfb61e11af38dafd",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Enable or Disable Submit JOB button",
        "func": "msg.enabled = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2750,
        "y": 820,
        "wires": [
            [
                "48fe92c3d9b4d8bb"
            ]
        ]
    },
    {
        "id": "06db3e224b379422",
        "type": "function",
        "z": "67991373.45438c",
        "g": "19463268a6c67561",
        "name": "Save RULES and Radio Button(rf)",
        "func": "\n\nlet rules = []\n\nmsg.payload.results.map(r => rules.push(r.rule))\nflow.set(\"rules\", rules)\n\nmsg.payload = !(msg.payload.outputErrorCount > 0)\nmsg.enabled = !(msg.payload.outputErrorCount > 0)\n\nmsg.disabled = true\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 140,
        "wires": [
            [
                "ef78548912a4d7aa",
                "2496a0361619e895"
            ]
        ]
    },
    {
        "id": "1e3847f427e4c74f",
        "type": "ui_button",
        "z": "67991373.45438c",
        "name": "",
        "group": "779fdd53a3120890",
        "order": 4,
        "width": 8,
        "height": 1,
        "passthru": true,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-circle-o",
        "payload": "false",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 1910,
        "y": 1700,
        "wires": [
            [
                "8701991a4839bab8",
                "b2a8b14d99432a2d",
                "cbbf5c9004d0946e",
                "30dce0e234d60286",
                "c3a24bb78c2a2175",
                "9db5fcbd4b1fd8c3",
                "093e4ef6e2a39496",
                "d67e28129722d643",
                "5d9d0ae34f31c5f4"
            ]
        ]
    },
    {
        "id": "21a2308db46311bb",
        "type": "function",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Change payload to true",
        "func": "msg.payload = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 600,
        "wires": [
            [
                "8c1b098c01bc4977"
            ]
        ]
    },
    {
        "id": "b87799331653cd82",
        "type": "subflow:8d5b6ce343b26ccf",
        "z": "67991373.45438c",
        "name": "",
        "x": 4600,
        "y": 820,
        "wires": []
    },
    {
        "id": "58df41cd8e54a653",
        "type": "debug",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 640,
        "wires": []
    },
    {
        "id": "73055769ca44b5f7",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Save QBES Payload",
        "func": "// workflow id will default to 0 if not provided. It corresponds to the spad.id db col.\n// \nlet reporting_id = flow.get(\"reporting_id\")// parseInt(flow.get(\"reporting_id\") || 2002865554)\nflow.set(\"startTime\", new Date().toLocaleString())\n// Save Checkboxes\n\nlet cb_ff = flow.get(\"cb_ff\")\nlet cb_fd = flow.get(\"cb_fd\")\n\nlet cb_rf = flow.get(\"cb_rf\")\nlet cb_rd = flow.get(\"cb_rd\")\n\n\nlet cb_network = flow.get(\"cb_network\")\nlet cb_attached = flow.get(\"cb_attached\")\n\n\nlet facts = (cb_ff) ? [flow.get(\"facts\")] : []\nlet rules = (cb_rf) ? flow.get(\"rules\") :[]\nlet attended = cb_attached\nlet showNetwork = cb_network\n\nlet QBESpayload = {\n    facts,     \n    rules, \n    attended, \n    showNetwork,\n    ruleType: (flow.get(\"validationType\")) || [],\n    parent_id: flow.get(\"workFlowId\") || 0,\n    reporting_id\n}\nflow.set(\"QBESPayload\",QBESpayload)\nmsg.payload = QBESpayload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3220,
        "y": 820,
        "wires": [
            [
                "f87a1ec1239428aa",
                "bdf7069659cda7af"
            ]
        ]
    },
    {
        "id": "2d31a9cbb8b25e8f",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4340,
        "y": 340,
        "wires": []
    },
    {
        "id": "8701991a4839bab8",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "889e30d476808397"
        ],
        "x": 2135,
        "y": 1960,
        "wires": []
    },
    {
        "id": "889e30d476808397",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 1",
        "links": [
            "8701991a4839bab8"
        ],
        "x": 1965,
        "y": 300,
        "wires": [
            [
                "9a41aca46f8e70f2"
            ]
        ]
    },
    {
        "id": "b2a8b14d99432a2d",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "24e108b562edc235"
        ],
        "x": 2135,
        "y": 1780,
        "wires": []
    },
    {
        "id": "24e108b562edc235",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 2",
        "links": [
            "b2a8b14d99432a2d"
        ],
        "x": 1965,
        "y": 100,
        "wires": [
            [
                "ef78548912a4d7aa"
            ]
        ]
    },
    {
        "id": "cbbf5c9004d0946e",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "4e7718304bce05d2"
        ],
        "x": 2145,
        "y": 1560,
        "wires": []
    },
    {
        "id": "4e7718304bce05d2",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 3",
        "links": [
            "cbbf5c9004d0946e"
        ],
        "x": 2575,
        "y": 780,
        "wires": [
            [
                "dfb61e11af38dafd"
            ]
        ]
    },
    {
        "id": "30dce0e234d60286",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "5b50d2fc0efaeade"
        ],
        "x": 2145,
        "y": 1640,
        "wires": []
    },
    {
        "id": "5b50d2fc0efaeade",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 4",
        "links": [
            "30dce0e234d60286"
        ],
        "x": 2295,
        "y": 1780,
        "wires": [
            [
                "7068b9cdbaed7677"
            ]
        ]
    },
    {
        "id": "c3a24bb78c2a2175",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "fc93792ff8aaff26"
        ],
        "x": 2135,
        "y": 1720,
        "wires": []
    },
    {
        "id": "fc93792ff8aaff26",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 5",
        "links": [
            "c3a24bb78c2a2175"
        ],
        "x": 1965,
        "y": 560,
        "wires": [
            [
                "8c1b098c01bc4977"
            ]
        ]
    },
    {
        "id": "9db5fcbd4b1fd8c3",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "5c24e7ac5f83708c"
        ],
        "x": 2145,
        "y": 1600,
        "wires": []
    },
    {
        "id": "5c24e7ac5f83708c",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 6",
        "links": [
            "9db5fcbd4b1fd8c3"
        ],
        "x": 1955,
        "y": 1040,
        "wires": [
            [
                "ba7a7633a548b05b"
            ]
        ]
    },
    {
        "id": "093e4ef6e2a39496",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "d2bbd2904874d7a2"
        ],
        "x": 2145,
        "y": 1680,
        "wires": []
    },
    {
        "id": "d2bbd2904874d7a2",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 7",
        "links": [
            "093e4ef6e2a39496"
        ],
        "x": 1955,
        "y": 1160,
        "wires": [
            [
                "7f5231b4f331e49b"
            ]
        ]
    },
    {
        "id": "d67e28129722d643",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "5561391c72b77ec4"
        ],
        "x": 2135,
        "y": 1840,
        "wires": []
    },
    {
        "id": "5561391c72b77ec4",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 8",
        "links": [
            "d67e28129722d643"
        ],
        "x": 1935,
        "y": 940,
        "wires": [
            [
                "f45097235bf5254d"
            ]
        ]
    },
    {
        "id": "739c4193fa8fce2c",
        "type": "function",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "Save Validation Type and Radio Button(rd)",
        "func": "flow.set(\"validationType\", msg.payload)\nmsg.payload = msg.payload.length > 0 \nmsg.enabled = !(msg.payload.length > 0 )\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 340,
        "wires": [
            [
                "9a41aca46f8e70f2"
            ]
        ]
    },
    {
        "id": "3af468cd9306ec3e",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "Output from QBES",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4110,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d7f2fcd5e791ba92",
        "type": "http request",
        "z": "67991373.45438c",
        "name": "Post: ProcessRules ",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/spad/processRules",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            },
            {
                "keyType": "other",
                "keyValue": "DEBUG",
                "valueType": "other",
                "valueValue": "true"
            }
        ],
        "x": 3850,
        "y": 820,
        "wires": [
            [
                "3af468cd9306ec3e",
                "711f05a68cde98f5"
            ]
        ]
    },
    {
        "id": "711f05a68cde98f5",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Send to log the output of the results",
        "func": "let messages = []\n\nlet P = msg.payload\nP.rules.valid.map(p=> messages.push({ruleId: p.id, message: p.message}))\n\n\nmsg.payload = {\n    wflid: msg.payload.workflowId,\n    passed: msg.payload.rules.valid.length,\n\n    failed: msg.payload.rules.invalid.length,\n    messages,\n    startTime: flow.get(\"startTime\"),\n    endTime: new Date().toLocaleString()\n\n}\nmsg.topic = \"QBES Output\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4210,
        "y": 820,
        "wires": [
            [
                "b87799331653cd82"
            ]
        ]
    },
    {
        "id": "5d9d0ae34f31c5f4",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "d587f5de3f4014c8"
        ],
        "x": 2135,
        "y": 1900,
        "wires": []
    },
    {
        "id": "d587f5de3f4014c8",
        "type": "link in",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "link in 9",
        "links": [
            "5d9d0ae34f31c5f4"
        ],
        "x": 265,
        "y": 280,
        "wires": [
            [
                "fb483894819a453e"
            ]
        ]
    },
    {
        "id": "d445d2aa213681e6",
        "type": "http in",
        "z": "67991373.45438c",
        "name": "Test Input Point",
        "url": "/test",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1360,
        "y": 1360,
        "wires": [
            [
                "077745dd4456572b",
                "4de57f6bb5f38231"
            ]
        ]
    },
    {
        "id": "7e3f13f11c3166e4",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 1360,
        "wires": []
    },
    {
        "id": "077745dd4456572b",
        "type": "function",
        "z": "67991373.45438c",
        "name": "function 7",
        "func": "msg.payload = \"Service called\"\nmsg.statusCode = 200\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1360,
        "wires": [
            [
                "7e3f13f11c3166e4",
                "1e3847f427e4c74f"
            ]
        ]
    },
    {
        "id": "24a6d577acd5cbc7",
        "type": "catch",
        "z": "67991373.45438c",
        "name": "Catch read file errors",
        "scope": null,
        "uncaught": false,
        "x": 220,
        "y": 1180,
        "wires": [
            [
                "c3c54ddc39435b68"
            ]
        ]
    },
    {
        "id": "4fab4477a5dae9fd",
        "type": "ui_toast",
        "z": "67991373.45438c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 610,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c3c54ddc39435b68",
        "type": "function",
        "z": "67991373.45438c",
        "name": "function 8",
        "func": "msg.payload = msg.error.message\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1180,
        "wires": [
            [
                "4fab4477a5dae9fd",
                "3edc4444ae0d428e"
            ]
        ]
    },
    {
        "id": "3edc4444ae0d428e",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1200,
        "wires": []
    },
    {
        "id": "96facefabfa129ae",
        "type": "inject",
        "z": "67991373.45438c",
        "name": "Inject a reporting ID",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "reporting_id",
                "v": "3010013214",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3010013214",
        "payloadType": "num",
        "x": 830,
        "y": 1100,
        "wires": [
            [
                "b50c075944f35652"
            ]
        ]
    },
    {
        "id": "29e5403351fd72d9",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b50c075944f35652",
        "type": "http request",
        "z": "67991373.45438c",
        "name": "API Get Facts by RID",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/rulesrepo/factsandrules/{{{reporting_id}}}?DEBUG=true",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 1280,
        "y": 1100,
        "wires": [
            [
                "29e5403351fd72d9"
            ]
        ]
    },
    {
        "id": "2a1010c6c72b92ee",
        "type": "ui_toast",
        "z": "67991373.45438c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Show Job is submitted",
        "x": 3610,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f87a1ec1239428aa",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Job Submitted",
        "func": "msg.payload = 'Job Submitted at: '+ new Date().toLocaleString()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3400,
        "y": 1080,
        "wires": [
            [
                "2a1010c6c72b92ee"
            ]
        ]
    },
    {
        "id": "4de57f6bb5f38231",
        "type": "http response",
        "z": "67991373.45438c",
        "name": "Send Response Back",
        "statusCode": "msg.statusCode",
        "headers": {
            "status": "200"
        },
        "x": 1640,
        "y": 1700,
        "wires": []
    },
    {
        "id": "2496a0361619e895",
        "type": "ui_button",
        "z": "67991373.45438c",
        "name": "",
        "group": "18a5a593fcd64912",
        "order": 2,
        "width": "5",
        "height": "1",
        "passthru": false,
        "label": "Save Rules",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Ready to Save Rules",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1510,
        "y": 40,
        "wires": [
            [
                "097b7c36f8623668",
                "9cdda70a448f80e0"
            ]
        ]
    },
    {
        "id": "967038b5dc63123e",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2220,
        "y": 40,
        "wires": []
    },
    {
        "id": "9cdda70a448f80e0",
        "type": "function",
        "z": "67991373.45438c",
        "name": "getrules ready for saving from params file",
        "func": "let rules = flow.get(\"rules\")\nlet rA = []\nrules.map((r) => {\n    let name = (r.event.name || \"Dynamic Rule\") + \": \"+r.event.ruleId\n    let description = name\n    \n    r.event.ruleId = \"0\"\n    r.event.type = \"0\"\n    r.event.eventType = \"impute\"\n    \n    \n\n    rA.push({ parsed_rule: r, data: r, name, description, id: 0 })\n})\n\nmsg.payload = {data:rA}\n\n// Send it to the backend for future processing\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 40,
        "wires": [
            [
                "967038b5dc63123e",
                "14d9e7a93f3dd56a"
            ]
        ]
    },
    {
        "id": "14d9e7a93f3dd56a",
        "type": "http request",
        "z": "67991373.45438c",
        "name": "Post: Save an array of rules",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/rulesrepo/new/parsedrules/0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            },
            {
                "keyType": "other",
                "keyValue": "DEBUG",
                "valueType": "other",
                "valueValue": "true"
            }
        ],
        "x": 2380,
        "y": 160,
        "wires": [
            [
                "3c39b274d9df5304"
            ]
        ]
    },
    {
        "id": "f880226b0a4c82d0",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2600,
        "y": 60,
        "wires": []
    },
    {
        "id": "cd36dc8de00aa79e",
        "type": "ui_toast",
        "z": "67991373.45438c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "QBES Output",
        "name": "",
        "x": 3010,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "3c39b274d9df5304",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Prepare notification for rules saved",
        "func": "msg.payload = \"Job Completed at \" + new Date().toLocaleString() + \"\\nSubmitted/Saved Rules: \" \n+ msg.payload.data.length +\"/\"\n+ msg.payload.rulesSaved.length\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2700,
        "y": 160,
        "wires": [
            [
                "cd36dc8de00aa79e",
                "f880226b0a4c82d0"
            ]
        ]
    },
    {
        "id": "097b7c36f8623668",
        "type": "ui_toast",
        "z": "67991373.45438c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "QBES Output",
        "name": "",
        "x": 1670,
        "y": 100,
        "wires": []
    },
    {
        "id": "3134b3146429fc29",
        "type": "inject",
        "z": "67991373.45438c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3400,
        "y": 480,
        "wires": [
            [
                "bdf7069659cda7af"
            ]
        ]
    },
    {
        "id": "bdf7069659cda7af",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Split RIDs array and prepare for QBES",
        "func": "\nmsg.payload = flow.get(\"reporting_id\") || []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 480,
        "wires": [
            [
                "d8efd0a725820987"
            ]
        ]
    },
    {
        "id": "27cb39e661a5761a",
        "type": "delay",
        "z": "67991373.45438c",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3940,
        "y": 540,
        "wires": [
            [
                "7f28fb8befeb2f38"
            ]
        ]
    },
    {
        "id": "7f28fb8befeb2f38",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Iterate over each RID",
        "func": "\nlet reporting_id = msg.payload\nlet QBESpayload = flow.get(\"QBESPayload\")\nQBESpayload.reporting_id = parseInt(reporting_id)\n msg.payload = QBESpayload\n\n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4280,
        "y": 480,
        "wires": [
            [
                "2d31a9cbb8b25e8f",
                "d7f2fcd5e791ba92"
            ]
        ]
    },
    {
        "id": "d8efd0a725820987",
        "type": "split",
        "z": "67991373.45438c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3910,
        "y": 240,
        "wires": [
            [
                "27cb39e661a5761a"
            ]
        ]
    },
    {
        "id": "5a1e132daec8024a",
        "type": "inject",
        "z": "2e37e573b3c922d6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"data\":[],\"message\":\"Submitting a job\",\"sentFrom\":\"QFlow\",\"sentTo\":\"Qbes\"}",
        "payloadType": "json",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "a0412d3c94324572"
            ]
        ]
    },
    {
        "id": "a0412d3c94324572",
        "type": "http request",
        "z": "2e37e573b3c922d6",
        "name": "Post: ProcessRules ",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/notification",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            },
            {
                "keyType": "other",
                "keyValue": "DEBUG",
                "valueType": "other",
                "valueValue": "true"
            }
        ],
        "x": 330,
        "y": 240,
        "wires": [
            [
                "f93932c0230210fc"
            ]
        ]
    },
    {
        "id": "f93932c0230210fc",
        "type": "debug",
        "z": "2e37e573b3c922d6",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 240,
        "wires": []
    },
    {
        "id": "a33d0b789237415b",
        "type": "http in",
        "z": "2e37e573b3c922d6",
        "name": "Qflow Notifications Receiving Post /qflow/notification",
        "url": "/qflow/notification",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 380,
        "wires": [
            [
                "cec8ed2593f9fd72",
                "f8840d14f1031c7a"
            ]
        ]
    },
    {
        "id": "cec8ed2593f9fd72",
        "type": "debug",
        "z": "2e37e573b3c922d6",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 540,
        "wires": []
    },
    {
        "id": "f8840d14f1031c7a",
        "type": "function",
        "z": "2e37e573b3c922d6",
        "name": "Save Events",
        "func": "// NK will set the submitted flow to null\n\n// flow.set(\"submitted\", null)\n// initialise the counter to 0 if it doesn't exist already\nvar notificationLog = context.get('notificationLog')|| [];\n// msg.payload.data = JSON.stringify(msg.payload.data)\nnotificationLog.push(msg.payload);\nif (notificationLog.length > 200){\n    // Delete oldest message if > 20\n    notificationLog.shift();\n    notificationLog.length = 200;\n} \n\ncontext.set('notificationLog', [])\n// store the value back\ncontext.set('notificationLog', notificationLog);\n\n// make it part of the outgoing msg object\nmsg = {};\n// msg.payload = {\n//     command: 'addData',\n//     arguments:[msg.payload]\n// }\n\nmsg.payload = [...notificationLog];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 380,
        "wires": [
            [
                "27055eaf0324d25e"
            ]
        ]
    },
    {
        "id": "965096e09ca7c885",
        "type": "ui_toast",
        "z": "2e37e573b3c922d6",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "QBES Output",
        "name": "",
        "x": 470,
        "y": 680,
        "wires": []
    },
    {
        "id": "01ad11cd828b155d",
        "type": "function",
        "z": "2e37e573b3c922d6",
        "name": "function 10",
        "func": "msg.payload = \"Job Completed at:\"+ new Date().toLocaleString()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 680,
        "wires": [
            [
                "965096e09ca7c885"
            ]
        ]
    },
    {
        "id": "248ac488b1fb1009",
        "type": "ui_button",
        "z": "2e37e573b3c922d6",
        "name": "",
        "group": "48c415689cc2322d",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Reset Notifications",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-circle-o",
        "payload": "[]",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 190,
        "y": 300,
        "wires": [
            [
                "187350ae70435f47"
            ]
        ]
    },
    {
        "id": "187350ae70435f47",
        "type": "function",
        "z": "2e37e573b3c922d6",
        "name": "Clear context set notificationLog to []",
        "func": "context.set('notificationLog', []);\nmsg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 300,
        "wires": [
            [
                "27055eaf0324d25e"
            ]
        ]
    },
    {
        "id": "27055eaf0324d25e",
        "type": "ui_table",
        "z": "2e37e573b3c922d6",
        "group": "48c415689cc2322d",
        "name": "Output",
        "order": 5,
        "width": 23,
        "height": 15,
        "columns": [
            {
                "field": "DEBUG",
                "title": "#",
                "width": "",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "message",
                "title": "Message",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "sentFrom",
                "title": "Sent From",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "sentTo",
                "title": "Sent To",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "data",
                "title": "Data",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 790,
        "y": 300,
        "wires": [
            [
                "751a113306f1cfd5"
            ]
        ]
    },
    {
        "id": "751a113306f1cfd5",
        "type": "debug",
        "z": "2e37e573b3c922d6",
        "name": "JOBS Output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.data",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 300,
        "wires": []
    },
    {
        "id": "f3903be4e24d8dca",
        "type": "http request",
        "z": "d103860e993c1512",
        "g": "7dc18555ca029842",
        "name": "API call to validate",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/reporting_unit/{{{rid}}}/validate?DEBUG=true",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 430,
        "y": 40,
        "wires": [
            [
                "999bbdaf976e7feb"
            ]
        ]
    },
    {
        "id": "97d2bd49cb3742bc",
        "type": "inject",
        "z": "d103860e993c1512",
        "g": "7dc18555ca029842",
        "name": "Validate RID Input",
        "props": [
            {
                "p": "rid",
                "v": "8771348140",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload.type",
                "v": "validate",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "VALIDATE",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "f3903be4e24d8dca",
                "d015bbe8f3761f7f"
            ]
        ]
    },
    {
        "id": "999bbdaf976e7feb",
        "type": "json",
        "z": "d103860e993c1512",
        "g": "7dc18555ca029842",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 40,
        "wires": [
            [
                "d529da54696a9982"
            ]
        ]
    },
    {
        "id": "d529da54696a9982",
        "type": "debug",
        "z": "d103860e993c1512",
        "g": "7dc18555ca029842",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 40,
        "wires": []
    },
    {
        "id": "e5ca7c9975e3a6b5",
        "type": "comment",
        "z": "d103860e993c1512",
        "g": "d1e0f39ddacfeb20",
        "name": "Validate a specific Reporting ID with all rules",
        "info": "## ## Validate a specific Reporting ID with all rules",
        "x": 670,
        "y": 140,
        "wires": []
    },
    {
        "id": "d015bbe8f3761f7f",
        "type": "debug",
        "z": "d103860e993c1512",
        "g": "7dc18555ca029842",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 80,
        "wires": []
    },
    {
        "id": "a52599d1e82370ad",
        "type": "inject",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "Rule Generate from Free Text",
        "props": [
            {
                "p": "payload.conditionstring",
                "v": " What is the name, condition, compute as an array and message of the following rule and return it as a json:    Naveen:   I was talking to Patrick and he wanted another    rule name is \"IF the flag for hazardas materials is reported  and the NAICS is in 484\". It should have a rule priority of 5 on a scale of 1 to 10.   and condition is   substr(RECORD_NAICS_NUM, 1,3)== 484 and RCPT_MOTR_HAZRD_STAT == 1 and RCPT_MOTR_HAZRD_PCT == 0 if true then compute  RCPT_MOTR_HAZRD_STAT = 2  Send the message \"Hazardous Material rule fired\".  Do you think we could chat on this soon?  Thanks Amit",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "AI",
        "x": 180,
        "y": 400,
        "wires": [
            [
                "3773a11cc06cd9db"
            ]
        ]
    },
    {
        "id": "3773a11cc06cd9db",
        "type": "http request",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "Post AI Services",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/openai/aicomplete",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 440,
        "y": 400,
        "wires": [
            [
                "6970f9e5cadfae30"
            ]
        ]
    },
    {
        "id": "f47d58da6a345fa9",
        "type": "debug",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.ruleName",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 400,
        "wires": []
    },
    {
        "id": "12d8ce370fc2153f",
        "type": "function",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "Get RuleName",
        "func": "\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 320,
        "wires": [
            [
                "f47d58da6a345fa9"
            ]
        ]
    },
    {
        "id": "6970f9e5cadfae30",
        "type": "switch",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "",
        "property": "payload.ruleName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 400,
        "wires": [
            [
                "12d8ce370fc2153f",
                "eee34fb243fcc025",
                "da904483e17171f2"
            ],
            []
        ]
    },
    {
        "id": "eee34fb243fcc025",
        "type": "debug",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "Debug RuleName",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 500,
        "wires": []
    },
    {
        "id": "8764792a5250d529",
        "type": "comment",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "Define AI end point. Pass free text",
        "info": "## # Open AI parse text",
        "x": 180,
        "y": 340,
        "wires": []
    },
    {
        "id": "2afe1b70382b1d3c",
        "type": "ui_toast",
        "z": "d103860e993c1512",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 770,
        "y": 620,
        "wires": []
    },
    {
        "id": "da904483e17171f2",
        "type": "change",
        "z": "d103860e993c1512",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ruleName",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 680,
        "wires": [
            [
                "2afe1b70382b1d3c"
            ]
        ]
    },
    {
        "id": "f0bda8ccf069c334",
        "type": "inject",
        "z": "d886a3864a88d832",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "508c4d88817d96f3",
        "type": "switch",
        "z": "d886a3864a88d832",
        "name": "1.0 Estab or KAU Switch",
        "property": "facts.level_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "d",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "e",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "d45b30e5c09c6653"
            ],
            [
                "d45b30e5c09c6653"
            ],
            [
                "d457c366c48ae1e9"
            ]
        ]
    },
    {
        "id": "d45b30e5c09c6653",
        "type": "subflow:0111e67f54e25c8c",
        "z": "d886a3864a88d832",
        "name": "",
        "x": 580,
        "y": 40,
        "wires": [
            [
                "d457c366c48ae1e9"
            ]
        ]
    },
    {
        "id": "d457c366c48ae1e9",
        "type": "switch",
        "z": "d886a3864a88d832",
        "name": "2.0 Estab",
        "property": "facts.level_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "e",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 200,
        "wires": [
            [
                "5a284359f94c5f07"
            ],
            [
                "48c251e7e1851bb1"
            ]
        ]
    },
    {
        "id": "5a284359f94c5f07",
        "type": "subflow:831dceaabaf975f9",
        "z": "d886a3864a88d832",
        "name": "",
        "x": 880,
        "y": 100,
        "wires": [
            [
                "48c251e7e1851bb1"
            ]
        ]
    },
    {
        "id": "4e38bfa9e516a9d7",
        "type": "subflow:10e53f47b43ab89e",
        "z": "d886a3864a88d832",
        "name": "4.0 Subflow Completeness",
        "x": 1220,
        "y": 300,
        "wires": [
            [
                "1393263d0d520dfd"
            ]
        ]
    },
    {
        "id": "1393263d0d520dfd",
        "type": "subflow:b99b7893add8c369",
        "z": "d886a3864a88d832",
        "name": "5.0 Logical Checks",
        "x": 1190,
        "y": 400,
        "wires": [
            [
                "22a7836fd0ee4876"
            ]
        ]
    },
    {
        "id": "22a7836fd0ee4876",
        "type": "subflow:27fccef587c0b218",
        "z": "d886a3864a88d832",
        "name": "6.0 Ratio/Range Testing",
        "x": 1210,
        "y": 480,
        "wires": [
            [
                "4242881485341267"
            ]
        ]
    },
    {
        "id": "4242881485341267",
        "type": "subflow:3fa869ffe40596e5",
        "z": "d886a3864a88d832",
        "name": "7.0 Post Ratio/Range",
        "x": 1200,
        "y": 540,
        "wires": [
            [
                "69135525ff74076e"
            ]
        ]
    },
    {
        "id": "69135525ff74076e",
        "type": "subflow:98b684914b5fce08",
        "z": "d886a3864a88d832",
        "name": "8.0 Unit Balance",
        "x": 1180,
        "y": 600,
        "wires": [
            [
                "f57362671b31528b"
            ]
        ]
    },
    {
        "id": "f57362671b31528b",
        "type": "subflow:2e55e3e8510e62d0",
        "z": "d886a3864a88d832",
        "name": "9.0 Company Additivity Check",
        "x": 1230,
        "y": 680,
        "wires": [
            [
                "66f76ef1f55de5b8"
            ]
        ]
    },
    {
        "id": "66f76ef1f55de5b8",
        "type": "subflow:2ad5fa373c21d0a3",
        "z": "d886a3864a88d832",
        "name": "10.0 Derived Items",
        "x": 1210,
        "y": 760,
        "wires": [
            [
                "0f8306d8913bb7d2"
            ]
        ]
    },
    {
        "id": "0f8306d8913bb7d2",
        "type": "subflow:67a3cd3b754e4fbd",
        "z": "d886a3864a88d832",
        "name": "11.0 Post Edit Status Fields",
        "x": 1240,
        "y": 840,
        "wires": [
            [
                "a0acac50eaa1f639"
            ]
        ]
    },
    {
        "id": "a0acac50eaa1f639",
        "type": "debug",
        "z": "d886a3864a88d832",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 940,
        "wires": []
    },
    {
        "id": "48c251e7e1851bb1",
        "type": "subflow:045ba1012eb08b50",
        "z": "d886a3864a88d832",
        "name": "3.0 Determine Status",
        "x": 1200,
        "y": 200,
        "wires": [
            [
                "4e38bfa9e516a9d7"
            ]
        ]
    },
    {
        "id": "3626fe7ffedf766a",
        "type": "inject",
        "z": "ae7e9f579855357c",
        "name": "Inject Worfklow ID",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SPAD",
        "payload": "29028",
        "payloadType": "num",
        "x": 130,
        "y": 40,
        "wires": [
            [
                "7a50cf774f7f5b56"
            ]
        ]
    },
    {
        "id": "8e6210b2e2cb1298",
        "type": "ui_date_picker",
        "z": "ae7e9f579855357c",
        "name": "",
        "label": "date",
        "group": "48c415689cc2322d",
        "order": 1,
        "width": 7,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 90,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "98626aec5c5ae44f",
        "type": "ui_text_input",
        "z": "ae7e9f579855357c",
        "name": "Input Workflow ID",
        "label": "Workflow ID",
        "tooltip": "Enter a Workflow ID from the SPAD",
        "group": "48c415689cc2322d",
        "order": 2,
        "width": 7,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "7a50cf774f7f5b56"
            ]
        ]
    },
    {
        "id": "39fd1017ceb52b5b",
        "type": "ui_table",
        "z": "ae7e9f579855357c",
        "group": "440f78388bf9306a",
        "name": "Rules Repository",
        "order": 1,
        "width": 29,
        "height": "15",
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Type",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Description",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "conditions",
                "title": "Conditions",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "event",
                "title": "Event",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "active",
                "title": "Active",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "rvs",
                "title": "RV",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1170,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "bfe5e89f0b386ed1",
        "type": "subflow:c5ce2d38887016b2",
        "z": "ae7e9f579855357c",
        "name": "",
        "x": 930,
        "y": 60,
        "wires": [
            [
                "3d9d45286705cfca"
            ],
            [
                "9bce07e0bcd382ef",
                "39fd1017ceb52b5b"
            ]
        ]
    },
    {
        "id": "7a50cf774f7f5b56",
        "type": "http request",
        "z": "ae7e9f579855357c",
        "name": "Get Workflow by ID",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/spad/{{{payload}}}?DEBUG=true",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 350,
        "y": 60,
        "wires": [
            [
                "b3a3ee5bc8d56868"
            ]
        ]
    },
    {
        "id": "b3a3ee5bc8d56868",
        "type": "function",
        "z": "ae7e9f579855357c",
        "name": "Get Facts from SPAD (WorkflowID)",
        "func": "msg.payload.facts = msg.payload.data[0].facts\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 60,
        "wires": [
            [
                "bfe5e89f0b386ed1"
            ]
        ]
    },
    {
        "id": "9526c76a9c6d970d",
        "type": "function",
        "z": "ae7e9f579855357c",
        "name": "Get Facts from DB",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 180,
        "wires": [
            [
                "bfe5e89f0b386ed1"
            ]
        ]
    },
    {
        "id": "7152a57907490b4f",
        "type": "function",
        "z": "ae7e9f579855357c",
        "name": "Get Facts from Spreadsheet",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "bfe5e89f0b386ed1"
            ]
        ]
    },
    {
        "id": "3d9d45286705cfca",
        "type": "debug",
        "z": "ae7e9f579855357c",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 20,
        "wires": []
    },
    {
        "id": "d1031d25749eacc3",
        "type": "comment",
        "z": "ae7e9f579855357c",
        "name": "Call Qbes for Workflow IDs",
        "info": "",
        "x": 170,
        "y": 220,
        "wires": []
    },
    {
        "id": "9bce07e0bcd382ef",
        "type": "function",
        "z": "ae7e9f579855357c",
        "name": "Balancing",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "066706819d742338",
        "type": "inject",
        "z": "ae7e9f579855357c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "9aba292ca0c69b17",
        "type": "file in",
        "z": "ae7e9f579855357c",
        "name": "",
        "filename": "",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 120,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a55094dd0e9394ea",
        "type": "debug",
        "z": "908af5a748b37aba",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload.rows",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 80,
        "wires": []
    },
    {
        "id": "3e68d1dde251bd01",
        "type": "inject",
        "z": "908af5a748b37aba",
        "name": "Select RV",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT-RV",
        "payload": "select  rvname as name, 'number' as type from response_variables;",
        "payloadType": "str",
        "x": 180,
        "y": 180,
        "wires": [
            [
                "25cd81b4ace00658"
            ]
        ]
    },
    {
        "id": "25cd81b4ace00658",
        "type": "function",
        "z": "908af5a748b37aba",
        "name": "function 1",
        "func": "msg.query = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 160,
        "wires": [
            [
                "a55094dd0e9394ea"
            ]
        ]
    },
    {
        "id": "e22cfefc78836d2d",
        "type": "inject",
        "z": "908af5a748b37aba",
        "name": "Get Rules",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "GET-RULES",
        "payload": "  select id, name, description, active, type, rvs,    parsed_rule->>'event' as event ,   parsed_rule->>'conditions' as conditions,   (parsed_rule)::TEXT parsed_rule, data   from aies.rules_repository ",
        "payloadType": "str",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "25cd81b4ace00658"
            ]
        ]
    },
    {
        "id": "61d9fb3b9c7c1d2d",
        "type": "http request",
        "z": "908af5a748b37aba",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost/reporting_unit/8771348140/validate?DEBUG=true",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 330,
        "y": 760,
        "wires": [
            [
                "2d03d52f5ca730a3"
            ]
        ]
    },
    {
        "id": "bbfa3ae528fd43ea",
        "type": "inject",
        "z": "908af5a748b37aba",
        "name": "CALL Validation GET",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "VALIDATE",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 840,
        "wires": [
            [
                "61d9fb3b9c7c1d2d"
            ]
        ]
    },
    {
        "id": "2d03d52f5ca730a3",
        "type": "json",
        "z": "908af5a748b37aba",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 760,
        "wires": [
            [
                "5c24612ef5d57c12"
            ]
        ]
    },
    {
        "id": "5c24612ef5d57c12",
        "type": "debug",
        "z": "908af5a748b37aba",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.rules",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 880,
        "wires": []
    },
    {
        "id": "44ef1682.4b53e8",
        "type": "function",
        "z": "908af5a748b37aba",
        "name": "",
        "func": "msg.payload = '<iframe src=\"http://localhost:8080/#/home\" width = \"1200\" height = \"800\"  frameborder = \"0\" ></iframe >';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "c99d37ca.90db78",
        "type": "ui_template",
        "z": "908af5a748b37aba",
        "group": "24e6f02ee5d4fe37",
        "name": "",
        "order": 3,
        "width": "13",
        "height": "8",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 630,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "80e5e88.32ed218",
        "type": "inject",
        "z": "908af5a748b37aba",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "http://localhost:8080/#/home",
        "payloadType": "str",
        "x": 230,
        "y": 1140,
        "wires": [
            [
                "44ef1682.4b53e8"
            ]
        ]
    },
    {
        "id": "4f32304b9c4675fc",
        "type": "ui_table",
        "z": "908af5a748b37aba",
        "group": "18e6e44c.b0561c",
        "name": "Rules Repository",
        "order": 3,
        "width": "14",
        "height": "4",
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Type",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Description",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "conditions",
                "title": "Conditions",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "event",
                "title": "Event",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "active",
                "title": "Active",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "rvs",
                "title": "RV",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 590,
        "y": 260,
        "wires": [
            [
                "e9526a4d013da44f",
                "1f1180ec80919248"
            ]
        ]
    },
    {
        "id": "07687bc8cc1240b6",
        "type": "function",
        "z": "908af5a748b37aba",
        "name": "function 2",
        "func": "msg.payload = msg.payload.rows\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 280,
        "wires": [
            [
                "4f32304b9c4675fc"
            ]
        ]
    },
    {
        "id": "e9526a4d013da44f",
        "type": "debug",
        "z": "908af5a748b37aba",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 80,
        "wires": []
    },
    {
        "id": "1f1180ec80919248",
        "type": "ui_form",
        "z": "908af5a748b37aba",
        "name": "Edit Rule",
        "label": "",
        "group": "24e6f02ee5d4fe37",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Description",
                "value": "description",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Variables",
                "value": "rvs",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Event",
                "value": "event",
                "type": "multiline",
                "required": true,
                "rows": 3
            },
            {
                "label": "Conditions",
                "value": "conditions",
                "type": "multiline",
                "required": false,
                "rows": 3
            },
            {
                "label": "DATA",
                "value": "data",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "description": "",
            "active": "",
            "rvs": "",
            "event": "",
            "conditions": "",
            "data": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "5d42bef29ffced84",
        "type": "function",
        "z": "908af5a748b37aba",
        "name": "function 4",
        "func": "msg.payload = msg.payload.rows\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "abe91f1e.21df",
        "type": "debug",
        "z": "c702b495.9cc2f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1050,
        "y": 120,
        "wires": []
    },
    {
        "id": "87b5b844.5719b8",
        "type": "inject",
        "z": "c702b495.9cc2f8",
        "name": "Input: Validate RID ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "8771348140",
        "payloadType": "num",
        "x": 130,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "2bb5276.49b45d8",
        "type": "http request",
        "z": "c702b495.9cc2f8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost/reporting_unit/{{{rid}}}/validate",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            },
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoor"
            }
        ],
        "x": 630,
        "y": 120,
        "wires": [
            [
                "178d7efeebb1045e",
                "21a1c9af.ba91a6"
            ]
        ]
    },
    {
        "id": "c775ecaa.a9813",
        "type": "function",
        "z": "c702b495.9cc2f8",
        "name": "Set HTTP Get Variable",
        "func": "// msg.rid = msg.req.params.rid\nmsg.limit = 100;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 240,
        "wires": [
            [
                "2bb5276.49b45d8"
            ]
        ]
    },
    {
        "id": "178d7efeebb1045e",
        "type": "json",
        "z": "c702b495.9cc2f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 810,
        "y": 60,
        "wires": [
            [
                "abe91f1e.21df",
                "fd7db6633a9cb081"
            ]
        ]
    },
    {
        "id": "8bc8887358552ee6",
        "type": "http in",
        "z": "c702b495.9cc2f8",
        "name": "",
        "url": "/validate/:rid",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "fd7db6633a9cb081",
        "type": "http response",
        "z": "c702b495.9cc2f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 220,
        "wires": []
    },
    {
        "id": "49d75074.37303",
        "type": "function",
        "z": "c702b495.9cc2f8",
        "name": "Assigning rid in msg",
        "func": "msg.rid=global.get('rid') ;\n// msg.b=global.get('b') ;\nmsg.payload = msg.rid\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 360,
        "wires": [
            [
                "c775ecaa.a9813"
            ]
        ]
    },
    {
        "id": "1373611.8d85b9f",
        "type": "inject",
        "z": "c702b495.9cc2f8",
        "name": "Initial Value",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "33",
        "payloadType": "num",
        "x": 170,
        "y": 480,
        "wires": [
            [
                "29981141.09dd9e"
            ]
        ]
    },
    {
        "id": "29981141.09dd9e",
        "type": "ui_text_input",
        "z": "c702b495.9cc2f8",
        "d": true,
        "name": "rid",
        "label": "Enter Reporting ID",
        "tooltip": "3449842849",
        "group": "1f48566b.e8958a",
        "order": 2,
        "width": 6,
        "height": 3,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "validate",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 390,
        "y": 480,
        "wires": [
            [
                "7894de12.4ed5f"
            ]
        ]
    },
    {
        "id": "7894de12.4ed5f",
        "type": "function",
        "z": "c702b495.9cc2f8",
        "name": "Store to Global Variable rid",
        "func": "global.set('rid',msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "21a1c9af.ba91a6",
        "type": "ui_text",
        "z": "c702b495.9cc2f8",
        "d": true,
        "group": "1f48566b.e8958a",
        "order": 9,
        "width": 23,
        "height": 9,
        "name": "",
        "label": "Result",
        "format": "{{msg.payload}} ",
        "layout": "row-spread",
        "className": "",
        "x": 990,
        "y": 440,
        "wires": []
    },
    {
        "id": "d433feb1.6365e",
        "type": "http in",
        "z": "7d4690e10f209584",
        "name": "",
        "url": "/index",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 160,
        "wires": [
            [
                "98b6cece.37871"
            ]
        ]
    },
    {
        "id": "98b6cece.37871",
        "type": "template",
        "z": "7d4690e10f209584",
        "name": "web-template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n   <head>\n      <!-- The jQuery library is a prerequisite for all jqSuite products -->\n      <script type=\"text/ecmascript\" src=\"http://www.guriddo.net/demo/js/jquery.min.js\"></script> \n      <!-- We support more than 40 localizations -->\n      <script type=\"text/ecmascript\" src=\"http://www.guriddo.net/demo/js/trirand/i18n/grid.locale-en.js\"></script>\n      <!-- This is the Javascript file of jqGrid -->   \n      <script type=\"text/ecmascript\" src=\"http://www.guriddo.net/demo/js/trirand/jquery.jqGrid.min.js\"></script>\n      <!-- This is the localization file of the grid controlling messages, labels, etc.\n      <!-- A link to a jQuery UI ThemeRoller theme, more than 22 built-in and many more custom -->\n      <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://struts.jgeppert.com/struts2-jquery-grid-showcase/themes/showcase/jquery-ui.css\" />\n      <!-- The link to the CSS that the grid needs -->\n      <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://www.guriddo.net/demo/css/trirand/ui.jqgrid.css\" />\n      <meta charset=\"utf-8\" />\n      <title>Demo CRUD with jqGrid</title>\n      <script type=\"text/javascript\"></script>\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"http://www.guriddo.net/B1D671CF-E532-4481-99AA-19F420D90332/netdefender/hui/ndhui.css\" />\n   </head>\n   <body>\n      <script type=\"text/javascript\" language=\"javascript\" src=\"http://www.guriddo.net/B1D671CF-E532-4481-99AA-19F420D90332/netdefender/hui/ndhui.js?0=0&0=0&0=0\"></script>\n      <table id=\"jqGrid\"></table>\n      <div id=\"jqGridPager\"></div>\n      <script type=\"text/javascript\"> \n         $(document).ready(function () {\n             $(\"#jqGrid\").jqGrid({\n                 url: '/search',\n                 mtype: \"GET\",\n                 datatype: \"json\",\n                 colModel: [\n                     { label: 'ID', name: 'id', key: true, search: false, width: 75 },\n                     { label: 'Name', name: 'name', width: 150, editable: true, formoptions: { colpos: 1, rowpos: 1 }  },\n                     { label: 'Last Name', name: 'lastname', width: 150, editable: true, edittype: \"select\", formoptions: { colpos: 1, rowpos: 2 },\n                       editoptions: {\n                            dataUrl:'/search/lastname',\n                            type:\"GET\",\n                            buildSelect: function(data) {\n                                var response = jQuery.parseJSON(data); //JSON data\n                                var s = '<select>';\n                                if (response && response.length) {\n                                    s += '<option hidden=\"true\">--- Select Lastname ---</option>';\n                                    for (var i = 0, l=response.length; i<l ; i++) {\n                                    var id = response[i].id;\n                                    var val = response[i].value; \n                                    // You can concatenate ID or any other string here\n                                    //For example: var ri = response[i].id + response[i].value; \n                                        s += '<option value=\"'+id+'\">'+val+'</option>';\n                                    }\n                                }\n                                return s + \"</select>\";\n                            } \n                         } \n                     },\n                     { label: 'Code', name: 'code', width: 150, editable: true, formoptions: { colpos: 2, rowpos: 1 } },  \n                     { label: 'Married', name: 'married', width: 150, align: \"center\", search: false, editable: true, edittype: \"checkbox\", formatter: \"checkbox\", editoptions: { value: \"1:0\" }, formoptions: { colpos: 2, rowpos: 2 } }\n                 ],\n                 width: 500,\n                 height: 260,\n                 rowNum: 10,\n                 loadonce: true,\n                 viewrecords: true,\n                 pager: \"#jqGridPager\"\n             });\n             \n             $('#jqGrid').navGrid('#jqGridPager',\n                 // The buttons to appear on the toolbar of the grid\n                 { edit: true, add: true, del: true, search: true, refresh: true, view: true, position: \"left\", cloneToTop: true },\n                 \n                 // Options for the Edit Dialog\n                 {\n                     url: '/update',\n                     editCaption: \"The Edit Dialog\",\n                     recreateForm: true,\n\t\t\t\t\t //checkOnUpdate : true,\n\t\t\t\t\t //checkOnSubmit : true,\n\t\t\t\t\t beforeSubmit : function( postdata, form , oper) {\n\t\t\t\t\t\t if(confirm('Are you sure you want to update this information?') ) {\n\t\t\t\t\t\t\t // Do something\n\t\t\t\t\t\t \t return [true,'/update'];\n\t\t\t\t\t\t } else {\n\t\t\t\t\t\t\treturn [false, 'Update failed!'];\n\t\t\t\t\t\t }\n\t\t\t\t\t },\n                     afterSubmit: function () {\n                         $(this).jqGrid(\"setGridParam\", {datatype: 'json'});\n                         return [true];\n                     },\n                     closeAfterEdit: true,\n                     errorTextFormat: function (data) {\n                         return 'Error: ' + data.responseText\n                     }\n                 },\n                 // Options for the Add Dialog\n                 {\n                     url: '/insert',\n                     addCaption: \"Add Dialog\",\n                     afterSubmit: function () {\n                         $(this).jqGrid(\"setGridParam\", {datatype: 'json'});\n                         return [true];\n                     },\n                     closeAfterAdd: true,\n                     recreateForm: true,\n                     errorTextFormat: function (data) {\n                         return 'Error: ' + data.responseText\n                     }\n                 },\n                 // Options for the Delete Dialog\n                 {   \n                     url: '/delete',\n                     errorTextFormat: function (data) {\n                         return 'Error: ' + data.responseText\n                     }\n             });\n             $(\"#jqGrid\").jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true });\n         });\n      </script>\n   </body>\n</html>",
        "output": "str",
        "x": 360,
        "y": 160,
        "wires": [
            [
                "3c1830eb.33b9"
            ]
        ]
    },
    {
        "id": "3c1830eb.33b9",
        "type": "http response",
        "z": "7d4690e10f209584",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1080,
        "y": 160,
        "wires": []
    },
    {
        "id": "ef285826.0e9738",
        "type": "http in",
        "z": "7d4690e10f209584",
        "name": "",
        "url": "/search",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "e396f56a.dcda38"
            ]
        ]
    },
    {
        "id": "e396f56a.dcda38",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "search-query",
        "func": "//msg.topic=\"SELECT CONCAT('M00','',test.id) AS id,test.name AS name,lastname.lastname AS lastname,test.code AS code,test.married AS married FROM test INNER JOIN lastname ON lastname.id = test.lastname ORDER BY test.id DESC\";\nmsg.query=\"SELECT * from response_variables  order by rvname\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "37bbae99e2515339"
            ]
        ]
    },
    {
        "id": "458b0528.a4d98c",
        "type": "http response",
        "z": "7d4690e10f209584",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1080,
        "y": 220,
        "wires": []
    },
    {
        "id": "d84f16f7.3d9698",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "search-response",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 745,
        "y": 220,
        "wires": [
            [
                "2b952c3a.f63884",
                "054e18b51109bc59"
            ]
        ]
    },
    {
        "id": "2b952c3a.f63884",
        "type": "json",
        "z": "7d4690e10f209584",
        "name": "",
        "property": "payload.rows",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 220,
        "wires": [
            [
                "458b0528.a4d98c"
            ]
        ]
    },
    {
        "id": "c91568f0.c3f2f8",
        "type": "http in",
        "z": "7d4690e10f209584",
        "name": "",
        "url": "/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 340,
        "wires": [
            [
                "81bb8cdf.93e5b"
            ]
        ]
    },
    {
        "id": "e4b82091.b8e9a",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "insert-response",
        "func": "msg.payload=msg.result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 735,
        "y": 340,
        "wires": [
            [
                "c224cbcf.e3e718"
            ]
        ]
    },
    {
        "id": "81bb8cdf.93e5b",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "insert-query",
        "func": "msg.topic=\"INSERT INTO test (name,lastname,code,married,timestamp) VALUES ('\" + msg.payload.name + \"','\" + msg.payload.lastname + \"','\" + msg.payload.code + \"','\" + msg.payload.married + \"',CURRENT_TIMESTAMP)\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "c224cbcf.e3e718",
        "type": "http response",
        "z": "7d4690e10f209584",
        "name": "",
        "x": 1080,
        "y": 340,
        "wires": []
    },
    {
        "id": "9929a22b.66471",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "lastname-query",
        "func": "msg.topic=\"SELECT id, lastname as value FROM lastname\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4bfc0ef6.e8511",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "lastname-response",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 745,
        "y": 280,
        "wires": [
            [
                "7b9f8d8b.c6d4e4"
            ]
        ]
    },
    {
        "id": "c70c0833.831ab8",
        "type": "http in",
        "z": "7d4690e10f209584",
        "name": "",
        "url": "/search/lastname",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "9929a22b.66471"
            ]
        ]
    },
    {
        "id": "f92b07.fa8e84f8",
        "type": "http response",
        "z": "7d4690e10f209584",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1080,
        "y": 280,
        "wires": []
    },
    {
        "id": "7b9f8d8b.c6d4e4",
        "type": "json",
        "z": "7d4690e10f209584",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 280,
        "wires": [
            [
                "f92b07.fa8e84f8"
            ]
        ]
    },
    {
        "id": "857ff60c.da9078",
        "type": "http in",
        "z": "7d4690e10f209584",
        "name": "",
        "url": "/delete",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 460,
        "wires": [
            [
                "5b19502.0bae0b"
            ]
        ]
    },
    {
        "id": "9a8b3fa.c0817c",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "delete-response",
        "func": "msg.payload=msg.result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 735,
        "y": 460,
        "wires": [
            [
                "4520409.a2751c"
            ]
        ]
    },
    {
        "id": "5b19502.0bae0b",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "delete-query",
        "func": "msg.topic=\"DELETE FROM test WHERE id='\" + msg.payload.id + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "4520409.a2751c",
        "type": "http response",
        "z": "7d4690e10f209584",
        "name": "",
        "x": 1080,
        "y": 460,
        "wires": []
    },
    {
        "id": "b9aef47c.8f0938",
        "type": "http in",
        "z": "7d4690e10f209584",
        "name": "",
        "url": "/update",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 400,
        "wires": [
            [
                "930f03c1.94bd5"
            ]
        ]
    },
    {
        "id": "ece93a93.ebc878",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "update-response",
        "func": "msg.payload=msg.result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 745,
        "y": 400,
        "wires": [
            [
                "e51fe384.1db73"
            ]
        ]
    },
    {
        "id": "930f03c1.94bd5",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "update-query",
        "func": "msg.topic=\"UPDATE test SET name='\" + msg.payload.name + \"', lastname='\" + msg.payload.lastname + \"', code='\" + msg.payload.code + \"', married='\" + msg.payload.married + \"' WHERE id='\" + msg.payload.id + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e51fe384.1db73",
        "type": "http response",
        "z": "7d4690e10f209584",
        "name": "",
        "x": 1080,
        "y": 400,
        "wires": []
    },
    {
        "id": "37bbae99e2515339",
        "type": "digitaloak-postgresql-query",
        "z": "7d4690e10f209584",
        "name": "PG-AIES",
        "server": "ea3e0b5d6b96f47a",
        "inputs": 1,
        "outputs": 1,
        "x": 540,
        "y": 220,
        "wires": [
            [
                "d84f16f7.3d9698"
            ]
        ]
    },
    {
        "id": "054e18b51109bc59",
        "type": "debug",
        "z": "7d4690e10f209584",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 80,
        "wires": []
    },
    {
        "id": "ee4d312b.cc342",
        "type": "ui_template",
        "z": "7d4690e10f209584",
        "group": "18e6e44c.b0561c",
        "name": "Search Sortable Table",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<style>\n\n<!--\n{\n      \"rvid\": \"165\",\n      \"rvname\": \"ACTV_MIO\",\n      \"mu_flag\": \"YES\",\n      \"kau_flag\": \"YES\",\n      \"estab_flag\": \"YES\",\n      \"rv_description\": \"Active months in operation - STG\",\n      \"qdm_flag\": \"YES\",\n      \"data_type\": \"STRING\",\n      \"visible\": \"1\",\n      \"created_by\": \"DATALOAD\",\n      \"created_date\": \"2022-05-23T15:49:23.000Z\",\n      \"last_modified_by\": \"faker001\",\n      \"last_modified_date\": \"2022-08-16T20:58:59.000Z\",\n      \"variable_type_id\": \"2\",\n      \"control_group_id\": \"22\"\n    },\n\n\n  -->\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\ntd, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n}\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\ntd {\n    background: #FAFAFA;\n}\n\n/* Cells in even rows (2,4,6...) are one color */\n\ntr:nth-child(even) td {\n    background: #F1F1F1;\n}\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\ntr:nth-child(odd) td {\n    background: #FEFEFE;\n}\ntr td:hover {\n    background: #666;\n    color: #FFF;\n}\n\n/* Hover cell effect! */\n    \n.animate-enter, \n.animate-leave\n{ \n    -webkit-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    -moz-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    -ms-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    -o-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    position: relative;\n    display: block;\n} \n\n.animate-enter.animate-enter-active, \n.animate-leave {\n    opacity: 1;\n    top: 0;\n    height: 30px;\n}\n\n.animate-leave.animate-leave-active,\n.animate-enter {\n    opacity: 0;\n    top: -50px;\n    height: 0px;\n}\n    \n.container\n{\n    max-height: 450px;\n    overflow-y: scroll;\n    overflow-x: hidden;\n}\n</style>\n\n<div>\n     <form>\n      <span class=\"input-group\">\n          <i class=\"fa fa-search\"></i>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search\" ng-model=\"search\">\n      </span>      \n  </form>\n  <div class=\"container\" ng-app=\"sortApp\">\n\n      <table>\n        <thead>\n        <tr style=\"width:100%\">\n            <td>\n          <a href=\"#\">\n            Index\n          </a>\n        </td>\n        <td>\n          <a href=\"#\" ng-click=\"sortType = 'firstname'; sortReverse = !sortReverse\">\n            First Name \n            <span ng-show=\"sortType == 'firstname' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'firstname' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n        <td>\n          <a href=\"#\" ng-click=\"sortType = 'lastname'; sortReverse = !sortReverse\">\n          Last Name \n            <span ng-show=\"sortType == 'lastname' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'lastname' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n        <td>\n          <a href=\"#\" ng-click=\"sortType = '(age -0)'; sortReverse = !sortReverse\">\n            Age\n            <span ng-show=\"sortType == '(age -0)' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == '(age -0)' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n\n          </tr>\n          </thead>\n          <tbody>\n        <tr ng-repeat=\"user in msg.options | orderBy:sortType:sortReverse | filter:search track by $index\" ng-click=\"msg.payload = user;send(msg);\" style=\"width:100%\" flex>\n                <td><b ng-bind=\"$index+1\"></b></td>\n               <td ng-bind=\"user.firstname\"></td>\n               <td ng-bind=\"user.lastname\"></td>\n               <td ng-bind=\"user.age\"></td>\n         </tr>\n        </tbody>\n      </table>\n\n</div>\n</div>\n</body></html>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 600,
        "y": 640,
        "wires": [
            [
                "e91124.de6c3ee"
            ]
        ]
    },
    {
        "id": "a60a7430.d10bd8",
        "type": "inject",
        "z": "7d4690e10f209584",
        "name": "Go",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 210,
        "y": 640,
        "wires": [
            [
                "bece8dfc.55e45"
            ]
        ]
    },
    {
        "id": "e91124.de6c3ee",
        "type": "debug",
        "z": "7d4690e10f209584",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 640,
        "wires": []
    },
    {
        "id": "bece8dfc.55e45",
        "type": "change",
        "z": "7d4690e10f209584",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[{\"firstname\":\"Paul\",\"lastname\":\"Doe\",\"age\":24},{\"firstname\":\"Greg\",\"lastname\":\"Jones\",\"age\":31},{\"firstname\":\"Able\",\"lastname\":\"Smith\",\"age\":29}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 640,
        "wires": [
            [
                "ee4d312b.cc342"
            ]
        ]
    },
    {
        "id": "3aece19508694869",
        "type": "ui_button",
        "z": "4821a41b2fd327fb",
        "name": "Button",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Button",
        "tooltip": "",
        "color": "#fffff",
        "bgcolor": "",
        "icon": "fa-star",
        "payload": "true",
        "payloadType": "bool",
        "topic": "Button",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "bb213dd9d74c4713",
        "type": "ui_dropdown",
        "z": "4821a41b2fd327fb",
        "name": "Choice",
        "label": "Choose what you want ",
        "tooltip": "",
        "place": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "Choice 1 : String",
                "value": "String",
                "type": "str"
            },
            {
                "label": "Choice 2 : Number",
                "value": 4,
                "type": "num"
            },
            {
                "label": "Choice 3 :Boolean",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "Choice ",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "bfd61d2bb51bb7d3",
        "type": "debug",
        "z": "4821a41b2fd327fb",
        "name": "Dashboard Log",
        "active": true,
        "tosidebar": true,
        "console": false,
        "complete": "payload",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 200,
        "wires": []
    },
    {
        "id": "e6fb6f269c616c1e",
        "type": "ui_switch",
        "z": "4821a41b2fd327fb",
        "name": "Light Switch",
        "label": "switch",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "Light Switch ",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "e666116ddc314a9d",
        "type": "ui_slider",
        "z": "4821a41b2fd327fb",
        "name": "Slider",
        "label": "slider",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "Slider",
        "min": 0,
        "max": 10,
        "step": 1,
        "x": 170,
        "y": 220,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "d6620b9a7fdd152f",
        "type": "ui_numeric",
        "z": "4821a41b2fd327fb",
        "name": "",
        "label": "numeric",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "Numérique",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "f3c2c582f77fb627",
        "type": "ui_text_input",
        "z": "4821a41b2fd327fb",
        "name": "",
        "label": "Text Entry Field ",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "Text Entry Feild",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "c053339d3d485845",
        "type": "ui_form",
        "z": "4821a41b2fd327fb",
        "name": "",
        "label": "Form in Node-RED ",
        "group": "54bca71e.4287f",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "Name",
                "type": "text",
                "required": true
            },
            {
                "label": "Number",
                "value": "Number",
                "type": "number",
                "required": false
            },
            {
                "label": "Email",
                "value": "Email",
                "type": "email",
                "required": false
            },
            {
                "label": "Password",
                "value": "Password",
                "type": "password",
                "required": false
            },
            {
                "label": "Check Box",
                "value": "Check Box",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Light Switch",
                "value": "Light Switch",
                "type": "switch",
                "required": false
            }
        ],
        "formValue": {
            "Name": "",
            "Number": "",
            "Email": "",
            "Password": "",
            "Check Box": false,
            "Light Switch": false
        },
        "payload": "",
        "submit": "Submit",
        "cancel": "Cancle",
        "topic": "Form",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "71ec6c626243f535",
        "type": "function",
        "z": "4821a41b2fd327fb",
        "name": "Save Events",
        "func": "\n// initialise the counter to 0 if it doesn't exist already\nvar dashboardLog = context.get('dashboardLog')|| [];\n\ndashboardLog.push(msg);\nif (dashboardLog.length > 20){\n    // Delete oldest message if > 20\n    dashboardLog.shift();\n    dashboardLog.length = 20;\n} \n\n\n// store the value back\ncontext.set('dashboardLog',dashboardLog);\n\n// make it part of the outgoing msg object\nmsg = {};\nmsg.payload = dashboardLog;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 260,
        "wires": [
            [
                "bfd61d2bb51bb7d3",
                "2851e691d3bfa1a6"
            ]
        ]
    },
    {
        "id": "2851e691d3bfa1a6",
        "type": "ui_template",
        "z": "4821a41b2fd327fb",
        "group": "785c383535b14b7d",
        "name": "Dashboard Event Log ",
        "order": 1,
        "width": "8",
        "height": "10",
        "format": "<ul>\n <li ng-repeat=\"x in msg.payload\">\n <font color=\"red\">{{x.topic}}</font>\n    <ul>\n        <li>{{x.payload}}</li>\n    </ul>\n </li>\n</ul>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 780,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "971963f55e94c5ec",
        "type": "ui_text_input",
        "z": "4821a41b2fd327fb",
        "name": "",
        "label": "Email Field",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "email",
        "delay": 300,
        "topic": "Email Field",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "3cc9c2ca3da31eef",
        "type": "ui_text_input",
        "z": "4821a41b2fd327fb",
        "name": "",
        "label": "Password Field",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "Password ",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "864b89d6485ddac4",
        "type": "ui_text_input",
        "z": "4821a41b2fd327fb",
        "name": "",
        "label": "Select a color",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "color",
        "delay": 300,
        "topic": "Select a color",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "cffb599fd51d0200",
        "type": "http in",
        "z": "813a171cf0470b24",
        "name": "Test Input Point",
        "url": "/test",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 140,
        "wires": [
            [
                "3cc51bee5b3acd4c"
            ]
        ]
    },
    {
        "id": "0d49c1e77a91ecc4",
        "type": "debug",
        "z": "813a171cf0470b24",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 140,
        "wires": []
    },
    {
        "id": "3cc51bee5b3acd4c",
        "type": "function",
        "z": "813a171cf0470b24",
        "name": "function 6",
        "func": "msg.payload = \"Service called\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 140,
        "wires": [
            [
                "0d49c1e77a91ecc4"
            ]
        ]
    }
]